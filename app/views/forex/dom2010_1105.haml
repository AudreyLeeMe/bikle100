%a(href="/r10/site_map")Site Map
>
%a(href="/r10/forex")Forex
> 
%a(href="/forex/fx_cct")Current Correlation Trends
>  dom2010_1105
%h5 dom2010_1105

I start this discussion with a URL from the Fed:
%br/

%a(href="http://www.federalreserve.gov/releases/h10/hist/" target="f")
  http://www.federalreserve.gov/releases/h10/hist/
%br/
The data is a simple list of dates and prices.  My assumption is that the prices are closing prices for the dates.
But, I am not completely sure.  
Therefore, please see this page as a source of ideas and techniques.
Do not see this page as a simplistic recipe for making money on the Forex market.
My hope is that you will spend some money on a brokerage account which gives you access to high quality data.
Then feel free to use my ideas and techniques to transform that high quality data into profits.
%br/
%br/
I loaded some of the data I found at the above URL into a table named dom which is an acronym for Day Of Month.
Next, I ran some simple queries to ensure that I could see the data in the dom table:

%pre
  :preserve
    02:35:27 SQL> --
    02:35:27 SQL> -- qry_dom.sql
    02:35:27 SQL> --
    02:35:27 SQL> 
    02:35:27 SQL> -- This helps me search for correlation trends related to "Day of Month".
    02:35:27 SQL> 
    02:35:27 SQL> -- First, I get a quick scan of the data I have:
    02:35:27 SQL> SELECT yr,COUNT(yr)FROM dom GROUP BY yr ORDER BY yr ;
    
            YR  COUNT(YR)
    ---------- ----------
          2007       1194
          2008       1176
          2009       1182
          2010        996
    
    02:35:27 SQL> SELECT pair,COUNT(pair)FROM dom GROUP BY pair ORDER BY pair ;
    
    PAIR    COUNT(PAIR)
    ------- -----------
    aud_usd         758
    eur_usd         758
    gbp_usd         758
    usd_cad         758
    usd_chf         758
    usd_jpy         758
    
    6 rows selected.
    
    Elapsed: 00:00:00.00
    02:35:27 SQL> SELECT day_of_month,COUNT(day_of_month)FROM dom GROUP BY day_of_month ORDER BY day_of_month ;
    
    DAY_OF_MONTH COUNT(DAY_OF_MONTH)
    ------------ -------------------
               1                 138
               2                 156
               3                 150
               4                 150
               5                 156
               6                 144
               7                 150
               8                 162
               9                 156
              10                 150
              11                 138
              12                 150
              13                 144
              14                 156
              15                 150
              16                 150
              17                 162
              18                 144
              19                 150
              20                 150
              21                 150
              22                 162
              23                 156
              24                 144
              25                 132
              26                 144
              27                 144
              28                 150
              29                 150
              30                 144
              31                  66
    
    31 rows selected.

Next, I built a simple report to help me see the relationship between two attributes of each pair: 
Day Of Month (DOM) and normalized average daily gain for that DOM.  Output from the report is displayed below:


%pre
  :preserve
    02:35:27 SQL> 
    02:35:27 SQL> -- Now start a serious look for a Correlation Trend by a simple aggregation over all years in the dom table.
    02:35:27 SQL> -- I want a return of 1 pip / hr so I filter out anything less than that:
    02:35:27 SQL> 
    02:35:27 SQL> CREATE OR REPLACE VIEW dom78910 AS
    02:35:27   2  SELECT
    02:35:27   3  pair
    02:35:27   4  ,day_of_month
    02:35:27   5  ,AVG(ndgain)avg_ndg
    02:35:27   6  ,SUM(ndgain)sum_ndg
    02:35:27   7  ,MIN(ydate1)mn_date
    02:35:27   8  ,COUNT(ndgain)ccount
    02:35:27   9  ,MAX(ydate2)mx_date
    02:35:27  10  FROM dom
    02:35:27  11  GROUP BY pair,day_of_month
    02:35:27  12  HAVING ABS(AVG(ndgain)) > 0.0024
    02:35:27  13  ORDER BY ABS(AVG(ndgain))DESC
    02:35:27  14  /
    
    View created.
    
    Elapsed: 00:00:00.05
    02:35:27 SQL> 
    02:35:27 SQL> SELECT * FROM dom78910;
    
    PAIR    DAY_OF_MONTH    AVG_NDG    SUM_NDG MN_DATE                 CCOUNT MX_DATE
    ------- ------------ ---------- ---------- ------------------- ---------- -------------------
    usd_cad           31 -.00396669  -.0436336 2007-01-31 00:00:00         11 2010-09-01 00:00:00
    usd_jpy           15 -.00393542 -.09838555 2007-02-15 00:00:00         25 2010-09-16 00:00:00
    gbp_usd           30 .003678978 .088295469 2007-01-30 00:00:00         24 2010-10-01 00:00:00
    usd_jpy           17 .003594697  .09705683 2007-01-17 00:00:00         27 2010-08-18 00:00:00
    usd_chf           29 .003356835 .083920877 2007-01-29 00:00:00         25 2010-09-30 00:00:00
    usd_jpy            7 -.00321301 -.08032536 2007-02-07 00:00:00         25 2010-10-08 00:00:00
    aud_usd           14 -.00314529 -.08177744 2007-02-14 00:00:00         26 2010-10-15 00:00:00
    aud_usd           10 .003021363 .075534073 2007-01-10 00:00:00         25 2010-08-11 00:00:00
    usd_chf           31 .002964509 .032609595 2007-01-31 00:00:00         11 2010-09-01 00:00:00
    aud_usd           23 -.00293263 -.07624835 2007-01-23 00:00:00         26 2010-09-24 00:00:00
    usd_chf            4 .002804059 .070101479 2007-01-04 00:00:00         25 2010-10-05 00:00:00
    aud_usd            8 .002767192 .074714176 2007-01-08 00:00:00         27 2010-09-09 00:00:00
    aud_usd            4  -.0027404 -.06851004 2007-01-04 00:00:00         25 2010-10-05 00:00:00
    aud_usd           15 -.00273362  -.0683404 2007-02-15 00:00:00         25 2010-09-16 00:00:00
    aud_usd           19 -.00263308  -.0658271 2007-03-19 00:00:00         25 2010-10-20 00:00:00
    aud_usd            7 -.00253469 -.06336717 2007-02-07 00:00:00         25 2010-10-08 00:00:00
    usd_chf           30 -.00251167 -.06028005 2007-01-30 00:00:00         24 2010-10-01 00:00:00
    aud_usd           27 .002465371 .059168901 2007-02-27 00:00:00         24 2010-10-28 00:00:00
    gbp_usd           23 -.00241655 -.06283026 2007-01-23 00:00:00         26 2010-09-24 00:00:00
    usd_cad            4  .00240996 .060249012 2007-01-04 00:00:00         25 2010-10-05 00:00:00
    
    20 rows selected.

Notice the first row in the report.  The value for DAY_OF_MONTH is 31.  
This corresponds to a closing price for usd_cad.
And that closing price is the first input for the calculation behind the average displayed in the column to the right.
%br/
%br/

That average, AVG_NDG, is important.
I made it the sort key because that average describes the most lucrative trade.
The most profitable trade on that page is described by that first row where PAIR is usd_cad and DAY_OF_MONTH is 31.
The second input for that calculation of the average is the closing price for the day after the 31st.
If I were to use the first row in the above report to make a trading decision to short usd_cad,
I would make that trade on the day after the 31st.  
I would not do the trade on the 31st.

%br/
%br/

At what exact time would I do the trade on the 1st?  
I would do it at Market-Open which is 1 second after midnight GMT of the 31st.
In California, during winter, that would be 1 second after 4pm on the 31st.