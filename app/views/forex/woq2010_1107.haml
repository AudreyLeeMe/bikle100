%a(href="/r10/site_map")Site Map
>
%a(href="/r10/forex")Forex
> 
%a(href="/forex/fx_cct")Current Correlation Trends
>  woq2010_1107
%h5 Week Of Quarter (woq2010_1107)

When I build queries to work with Forex data I pull the data from 3 sources.

The first data source is the Fed:
%br/
%br/
%a(href="http://www.federalreserve.gov/releases/h10/hist/" target="f")
  http://www.federalreserve.gov/releases/h10/hist/
%br/
%br/

I like the Fed data because it is free, easy to obtain, and unconstrained by copyright.

I dislike the Fed data because it contains gaps, and lacks precise time stamps.

Also it is coarse; it only shows 1 price per day for each pair.

I prefer accurate hourly data which shows 1 price per hour for each pair.
%br/
%br/

You can find accurate hourly Forex data via google:
%br/
%br/

%a(href="https://encrypted.google.com/search?q=free+forex+historical+data" target="g")
  https://encrypted.google.com/search?q=free+forex+historical+data
%br/
%br/

I am not sure what the restrictions are on the data so I prefer you find the data from Google rather than me.
%br/
%br/
One problem with my hourly data is that I only trust it for after 2009.  I found some obvious errors in it for 2008.

I compared the data to high quality data I get from my broker.

As far as I can tell, the data is accurate for after 2009.
%br/
%br/
I loaded the hourly data into a table named hourly.
Each row in hourly contains an opening price and a closing price for a pair at a specific minute.
Most of the rows are for 1 minute after the hour.
%br/
%br/
I round the data to the nearest hour which is easy to do with the SQL ROUND() function.
Data which is rounded to the nearest hour plays better in certain types of table joins.
%br/
%br/
Next I wrote a mildly complex SQL query which does the following:
%ul
  %li
    Calculate Week Of Quarter that the row resides in.
  %li
    Calculate the "normalized" hourly gain (n_hgain) for each pair for each hour.
  %li
    Aggregate n_hgain 4 different ways: AVG(), SUM(), COUNT(), and STDDEV()
%br/
Then, I ran the query.  The results are listed below:

%pre
  :preserve
    SQL*Plus: Release 11.2.0.1.0 Production on Sat Nov 6 23:10:52 2010
    
    Copyright (c) 1982, 2009, Oracle.  All rights reserved.
    
    
    Connected to:
    Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
    With the Partitioning, OLAP, Data Mining and Real Application Testing options
    
    23:10:52 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';
    
    Session altered.
    
    Elapsed: 00:00:00.00
    23:10:52 SQL> 23:10:52 SQL> --
    23:10:52 SQL> -- sbw_woq_h.sql
    23:10:52 SQL> --
    23:10:52 SQL> 
    23:10:52 SQL> -- For each pair, look at woq WHERE ydate > '2009-01-01'
    23:10:52 SQL> -- This script is similar to sbw_wom.sql
    23:10:52 SQL> SELECT
    23:10:52   2  pair
    23:10:52   3  ,week_of_qtr
    23:10:52   4  ,ROUND(AVG(nhgain),5)avg_n_hgain
    23:10:52   5  ,ROUND(SUM(nhgain),4)sum_n_hgain
    23:10:52   6  ,COUNT(nhgain)
    23:10:52   7  ,ROUND(STDDEV(nhgain),4)stddev_n_hgain
    23:10:52   8  FROM
    23:10:52   9  (
    23:10:52  10    SELECT
    23:10:52  11    pair
    23:10:52  12    ,ydate
    23:10:52  13    ,nhgain
    23:10:52  14    -- Step 2 of calculating week_of_qtr:
    23:10:52  15    ,week_of_year - 13*(qtr-1)week_of_qtr
    23:10:52  16    FROM
    23:10:52  17    (
    23:10:52  18      SELECT
    23:10:52  19      pair
    23:10:52  20      ,ydate
    23:10:52  21      -- Normalized hourly gain:
    23:10:52  22      ,(clse-opn)/opn nhgain
    23:10:52  23      -- Step 1 of calculating week_of_qtr:
    23:10:52  24      ,0+TO_CHAR(ydate,'WW')week_of_year
    23:10:52  25      ,0+TO_CHAR(ydate,'Q')qtr
    23:10:52  26      FROM hourly
    23:10:52  27      -- Guard against divide-by-zero:
    23:10:52  28      WHERE opn>0
    23:10:52  29      -- I mistrust the 2008 data quality:
    23:10:52  30      AND ydate > '2009-01-01'
    23:10:52  31    )
    23:10:52  32  )
    23:10:52  33  WHERE week_of_qtr BETWEEN 1 AND 13
    23:10:52  34  GROUP BY pair,week_of_qtr
    23:10:52  35  -- HAVING COUNT(pair)>200
    23:10:52  36  -- I want more than 1/2 pip per hour:
    23:10:52  37  HAVING ABS(AVG(nhgain)) > (0.0001 / 2)
    23:10:52  38  ORDER BY ABS(AVG(nhgain))DESC
    23:10:52  39  /
    
    PAIR            WEEK_OF_QTR AVG_N_HGAIN SUM_N_HGAIN COUNT(NHGAIN) STDDEV_N_HGAIN
    --------------- ----------- ----------- ----------- ------------- --------------
    eur_usd                  11      .00012       .1037           847          .0016
    aud_usd                   7     -.00012      -.1029           841          .0024
    usd_cad                   2      -.0001      -.0989           967          .0017
    gbp_usd                   6      -.0001      -.0842           847          .0019
    usd_chf                   3       .0001       .0932           968          .0015
    usd_cad                   3       .0001       .0922           968          .0019
    gbp_usd                   3     -.00009      -.0889           968           .002
    usd_cad                   1     -.00009      -.0889           968          .0017
    aud_usd                  11      .00009       .0726           847           .002
    usd_chf                   2     -.00008        -.08           967          .0015
    gbp_usd                   2      .00008       .0768           967          .0016
    gbp_usd                  11      .00008       .0652           847          .0018
    usd_jpy                   2     -.00007        -.08          1088          .0015
    aud_usd                   1      .00007       .0706           968          .0022
    gbp_usd                   5      .00007       .0682           965          .0018
    aud_usd                   9      .00007       .0593           847          .0023
    eur_usd                   3     -.00007      -.0677           968          .0015
    usd_chf                  11     -.00007      -.0574           847          .0019
    eur_usd                   2      .00007       .0654           967          .0015
    aud_usd                   3     -.00006      -.0613           968          .0024
    gbp_usd                   4      .00006       .0603           968          .0017
    usd_jpy                   7     -.00006      -.0673          1083          .0016
    usd_cad                  10     -.00006      -.0519           847          .0018
    usd_chf                  13     -.00005      -.0392           735          .0014
    usd_cad                   7      .00005       .0431           841          .0018
    aud_usd                   8      .00005       .0432           847          .0022
    usd_cad                  13      .00005       .0372           735          .0015
    
    27 rows selected.
    
    Elapsed: 00:00:00.42
    23:10:53 SQL> 
    23:10:53 SQL> -- What is the week_of_qtr calculation for today?
    23:10:53 SQL> SELECT
    23:10:53   2  (week_of_year - 13*(qtr-1))week_of_qtr
    23:10:53   3  ,sysdate
    23:10:53   4  FROM
    23:10:53   5  (
    23:10:53   6    SELECT
    23:10:53   7    0+TO_CHAR(sysdate,'WW')week_of_year
    23:10:53   8    ,0+TO_CHAR(sysdate,'Q')qtr
    23:10:53   9    FROM dual
    23:10:53  10  )
    23:10:53  11  /
    
    WEEK_OF_QTR SYSDATE
    ----------- -------------------
              6 2010-11-06 23:10:53
    
    Elapsed: 00:00:00.00
    23:10:53 SQL> 
    23:10:53 SQL> exit
    Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
    With the Partitioning, OLAP, Data Mining and Real Application Testing options
                                 2010
    
          January               February               March
    Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa
                    1  2      1  2  3  4  5  6      1  2  3  4  5  6
     3  4  5  6  7  8  9   7  8  9 10 11 12 13   7  8  9 10 11 12 13
    10 11 12 13 14 15 16  14 15 16 17 18 19 20  14 15 16 17 18 19 20
    17 18 19 20 21 22 23  21 22 23 24 25 26 27  21 22 23 24 25 26 27
    24 25 26 27 28 29 30  28                    28 29 30 31
    31                                          
           April                  May                   June
    Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa
                 1  2  3                     1         1  2  3  4  5
     4  5  6  7  8  9 10   2  3  4  5  6  7  8   6  7  8  9 10 11 12
    11 12 13 14 15 16 17   9 10 11 12 13 14 15  13 14 15 16 17 18 19
    18 19 20 21 22 23 24  16 17 18 19 20 21 22  20 21 22 23 24 25 26
    25 26 27 28 29 30     23 24 25 26 27 28 29  27 28 29 30
                          30 31                 
            July                 August              September
    Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa
                 1  2  3   1  2  3  4  5  6  7            1  2  3  4
     4  5  6  7  8  9 10   8  9 10 11 12 13 14   5  6  7  8  9 10 11
    11 12 13 14 15 16 17  15 16 17 18 19 20 21  12 13 14 15 16 17 18
    18 19 20 21 22 23 24  22 23 24 25 26 27 28  19 20 21 22 23 24 25
    25 26 27 28 29 30 31  29 30 31              26 27 28 29 30
                                                
          October               November              December
    Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa
                    1  2      1  2  3  4  5  6            1  2  3  4
     3  4  5  6  7  8  9   7  8  9 10 11 12 13   5  6  7  8  9 10 11
    10 11 12 13 14 15 16  14 15 16 17 18 19 20  12 13 14 15 16 17 18
    17 18 19 20 21 22 23  21 22 23 24 25 26 27  19 20 21 22 23 24 25
    24 25 26 27 28 29 30  28 29 30              26 27 28 29 30 31
    31                                          

When I compare the above results to the results here:
%br/
%a(href="/forex/woq2010_1106")woq2010_1106
%br/
I am not pleased that the results match poorly.
I do know that the Fed data is missing the first week of November 2010.
Also, the Fed data has gaps in it.  You can see them if you look at the data here:

%br/
%a(href="http://www.federalreserve.gov/releases/h10/hist/" target="f")
  http://www.federalreserve.gov/releases/h10/hist/
%br/
My sense is that the results from the hourly data are more accurate.

One obvious attribute of the hourly data is that the row counts are much higher.

For example the eur_usd pair on week #11 shows a row count of 847.

If you look at the URL below for the eur_usd pair on week #11 you will see a row count of 28:

%br/
%a(href="/forex/woq2010_1106")woq2010_1106
%br/
%br/

I tend to trust data more if it has higher row counts
because missing rows and rounding errors
probably affect aggregation operations less than data with low row counts.

%br/
%br/
So, how do I use the data on this page for my trading activities?
%br/

Each Sunday I check the above output before the Forex market opens for the week.

Currently, I am bullish on AUD, CAD and CHF. I am bearish on USD. 

Today is 2010-11-06. The 7th week of the quarter starts tomorrow. 
%br/
%br/

The second row in the above report shows a pair which historically has done well on the 7th week of the quarter.

It is a bearish position on aud_usd (Sell AUD to buy USD).

That position, though, is contrary to my sentiment.  
Currently I am bearish on USD and bullish on AUD.
%br/
%br/

So, I will ignore the second row in the above report.

Later in the report I do find a position which conforms to my sentiment.

It is a short of the usd_jpy pair (Sell USD to buy JPY).

Since 2009-01-01, on 1083 occasions, that trade has gained on average 0.6 pips per hour for a total sum of 673 pips.

How risky would that trade be?

%br/
%br/
Answer: Risky.
%br/
%br/

I use standard deviation of average n_hgain to give me a measurement of the risk.
You can see from the report that the standard deviation of average n_hgain for this trade is 16 pips.
%br/
%br/
To gain 0.6 pips / hour I would be risking about 16 pips / hour which feels like a low ratio of gain to risk.
%br/
%br/
If you want to try to duplicate or enhance my results, you will find my software here:
%br/
%a(href="https://github.com/bikle/rluck/tree/master/woq2010_1107/" target="t")
  https://github.com/bikle/rluck/tree/master/woq2010_1107/
%br/
%br/
