%a(href="/r10/site_map")Site Map
>
%a(href="/r10/forex")Forex
> 
%a(href="/forex/fx_cct")Current Correlation Trends
>  woq2010_1103
%h5 Week Of Quarter (woq2010_1103)

I found that the 11th week of any quarter is a good time to buy Swiss
Francs with US Dollars and hold that position for 1 week.

I show some data from 2010:

%pre
  :preserve
    14:11:48 SQL> SELECT
    14:11:48   2  qtr
    14:11:48   3  ,-AVG(wgain)
    14:11:48   4  FROM wjw
    14:11:48   5  WHERE pair = 'usd_chf'
    14:11:48   6  AND yr = '2010'
    14:11:48   7  AND woq = 11
    14:11:48   8  GROUP BY qtr
    14:11:48   9  ORDER BY qtr
    14:11:48  10  /
    
    Q -AVG(WGAIN)
    - -----------
    1     -.00348
    2      .02556
    3      .00958

Notice in the above output that I use the predicate: WHERE pair = 'usd_chf'

%br/
%br/
When I trade Swiss Francs (CHF) with US dollars (USD) in the Forex market, the prices are typically displayed for the USD/CHF pair:
%a(href="http://finance.yahoo.com/currency-investing" target="y")http://finance.yahoo.com/currency-investing

%br/
%br/
These prices describe a transaction where I use CHF to buy USD.

If, however, I want to use USD to buy CHF, the prices will be displayed as negative numbers.

Notice in the above output that I have placed a minus-sign in front of the avg-calculation.
%br/

Now notice the actual output.  In the 11th week of Q1 of 2010 had I bought 1 CHF with USD, I would have lost 34.8 pips.  For a position of 10,000 CHF this is about $35.

%br/
%br/
For week 11 of Q2 and Q3 of 2010, though, the strategy was a winner.  And so far, for 2010, the strategy has gained:
\-34.8 + 255.6 + 95.8 pips which is 316.6 pips.

%br/
%br/

I display data for other years below:
%br/
%br/

%pre
  :preserve
    14:53:11 SQL> 
    14:53:11 SQL> SELECT
    14:53:11   2  qtr
    14:53:11   3  ,-AVG(wgain)
    14:53:11   4  FROM wjw
    14:53:11   5  WHERE pair = 'usd_chf'
    14:53:11   6  AND yr = '2009'
    14:53:11   7  AND woq = 11
    14:53:11   8  GROUP BY qtr
    14:53:11   9  ORDER BY qtr
    14:53:11  10  /
    
    Q -AVG(WGAIN)
    - -----------
    1      .05688
    2      .00236
    3      .00868
    4     -.01054
    
    Elapsed: 00:00:00.00
    14:53:11 SQL> 
    14:53:11 SQL> SELECT
    14:53:11   2  qtr
    14:53:11   3  ,-AVG(wgain)
    14:53:11   4  FROM wjw
    14:53:11   5  WHERE pair = 'usd_chf'
    14:53:11   6  AND yr = '2008'
    14:53:11   7  AND woq = 11
    14:53:11   8  GROUP BY qtr
    14:53:11   9  ORDER BY qtr
    14:53:11  10  /
    
    Q -AVG(WGAIN)
    - -----------
    1       .0046
    2     -.00048
    3      .02396
    4      .08364
    
    Elapsed: 00:00:00.01
    14:53:11 SQL> 
    14:53:11 SQL> SELECT
    14:53:11   2  qtr
    14:53:11   3  ,-AVG(wgain)
    14:53:11   4  FROM wjw
    14:53:11   5  WHERE pair = 'usd_chf'
    14:53:11   6  AND yr = '2007'
    14:53:11   7  AND woq = 11
    14:53:11   8  GROUP BY qtr
    14:53:11   9  ORDER BY qtr
    14:53:11  10  /
    
    Q -AVG(WGAIN)
    - -----------
    1      .00262
    2      .00464
    3      .00598
    4     -.01628
    
    Elapsed: 00:00:00.00
    14:53:11 SQL> 
    14:53:11 SQL> exit
    Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
    With the Partitioning, OLAP, Data Mining and Real Application Testing options
    oracle@z2:/pt/s/rlk/sbw_woq$ 

%br/
%br/
So, how did I uncover this correlation trend of USD/CHF for the 11th week of every quarter?
%br/
%br/
I used:
%ul
  %li
    Data:
    %a(href="http://www.federalreserve.gov/releases/h10/hist/" target="f")http://www.federalreserve.gov/releases/h10/hist/
  %li Common Sense
  %li SQL

%br/
%br/

The data is made up of records with a simple structure: Date, Price, Currency Pair
%br/
%br/

The Currency Pairs are listed below in the form of URLs:
%ul
  %li
    %a(href="https://www.google.com/finance?q=AUDUSD" target="g")AUD/USD
  %li
    %a(href="https://www.google.com/finance?q=EURUSD" target="g")EUR/USD
  %li
    %a(href="https://www.google.com/finance?q=GBPUSD" target="g")GBP/USD
  %li
    %a(href="https://www.google.com/finance?q=USDCAD" target="g")USD/CAD
  %li
    %a(href="https://www.google.com/finance?q=USDCHF" target="g")USD/CHF
  %li
    %a(href="https://www.google.com/finance?q=USDJPY" target="g")USD/JPY

So, the data is simple, what about the common sense I used uncover this correlation trend?

I started by visualizing the data into 2 groups: far-past and near-past.

I arbitrarily set the far-past as any data before 2007-01-01.  Obviously then, the near-past would be any data after 2007-01-01.

Next, for each pair in each week of each quarter in the far-past I calculated the gain for that pair.

Then, I averaged the gains and aggregated the results into a simple 3 column table:

%br/
%br/

pair, week_of_quarter, far_past_avg_gain

%br/
%br/

Next, I followed the same process to aggregate results for the near-past into a 3 column table:

%br/
%br/

pair, week_of_quarter, near_past_avg_gain

%br/
%br/

Then, I joined the tables on pair, week_of_quarter to give me a 4 column table:


%br/
%br/

pair, week_of_quarter, far_past_avg_gain, near_past_avg_gain

%br/
%br/

Next, I asked a question, "Could near_past_avg_gain be dependent on far_past_avg_gain?"

%br/
%br/

In my opinion, this is a dangerous question to ask.

If I assume that past prices in the Forex market affect future prices, and I make trades based on that assumption, I could lose money if that assumption is false.

The economic cataclysm of 2008 probably altered the Forex market.  Market forces at work before 2008 are probably different than forces after 2008.

I think it wise to challenge the assumption that that past prices in the Forex market affect future prices.

Even if the assumption is true, I could still lose money.

%br/
%br/

In any event, I had a 4 column table where column 3 contained data older than column 4.  How do I see if a connection exists between the two columns?

This type of question is discussed in Freshman Statistics.  A common approach is to create a two dimensional object called a scatter plot:

%br/
%br/
%a(href="http://en.wikipedia.org/wiki/Scatter_plot" target="w")http://en.wikipedia.org/wiki/Scatter_plot
%br/
%br/

So, I visualized a scatter plot which had far_past_avg_gain on the x-axis and near_past_avg_gain on the y-axis.

Then, I used a statistical technique to quantify the dependence of near_past_avg_gain on far_past_avg_gain (based on the bold assumption that near_past_avg_gain depends on far_past_avg_gain):

%br/
%br/

%a(href="http://en.wikipedia.org/wiki/Pearson_product-moment_correlation_coefficient" target="w")
  http://en.wikipedia.org/wiki/Pearson_product-moment_correlation_coefficient
%br/
%br/

With SQL, it is easy to calculate Pearson product-moment correlation coefficient (aka correlation) using an aggregation function called CORR():

%br/
%br/

%a(href="https://encrypted.google.com/search?q=sql+corr+function" target="g")
  https://encrypted.google.com/search?q=sql+corr+function

%br/
%br/

Here is a demonstration of the SQL-CORR() function.  I prefer to list the independent variable first since it corresponds to the x-axis and x sorts before y:
%br/
%br/

SELECT CORR(far_past_avg_gain, near_past_avg_gain) FROM mytable;

%br/
%br/

Here is output from a query against the actual data:

%pre
  :preserve
    01:18:58 SQL> SELECT pair,COUNT(pair),CORR(avg_a,avg_b)
    01:18:58   2  FROM qwjw2007
    01:18:58   3  GROUP BY pair
    01:18:58   4  HAVING CORR(avg_a,avg_b)>0
    01:18:58   5  ORDER BY CORR(avg_a,avg_b)
    01:18:58   6  /
    
    PAIR    COUNT(PAIR) CORR(AVG_A,AVG_B)
    ------- ----------- -----------------
    usd_jpy         260        .077890295
    usd_chf         260        .090772839

Out of the 6 pairs, only 2 had a positive correlation.

%br/
%br/

Next, I divided the data into a group before 2008-01-01 and a group after 2008-01-01.

And again, I looked for a correlation between far-past and near-past:

%pre
  :preserve
    01:18:59 SQL> SELECT pair,COUNT(pair),CORR(avg_a,avg_b)
    01:18:59   2  FROM qwjw2008
    01:18:59   3  GROUP BY pair
    01:18:59   4  HAVING CORR(avg_a,avg_b)>0
    01:18:59   5  ORDER BY CORR(avg_a,avg_b)
    01:18:59   6  /
    
    PAIR    COUNT(PAIR) CORR(AVG_A,AVG_B)
    ------- ----------- -----------------
    usd_cad         260        .022423519
    usd_chf         260        .076902042
    aud_usd         260        .084665975
    gbp_usd         260        .088865187


Here is output from data where I used 2009-01-01 as the dividing line:

%pre
  :preserve
    01:18:59 SQL> SELECT pair,COUNT(pair),CORR(avg_a,avg_b)
    01:18:59   2  FROM qwjw2009
    01:18:59   3  GROUP BY pair
    01:18:59   4  HAVING CORR(avg_a,avg_b)>0
    01:18:59   5  ORDER BY CORR(avg_a,avg_b)
    01:18:59   6  /
    
    PAIR    COUNT(PAIR) CORR(AVG_A,AVG_B)
    ------- ----------- -----------------
    gbp_usd         253        .053736667
    eur_usd         253        .090092116
    aud_usd         253        .093125333
    usd_chf         253        .228706773

Here is output from data where I used 2010-01-01 as the dividing line:
%pre
  :preserve
    01:18:59 SQL> SELECT pair,COUNT(pair),CORR(avg_a,avg_b)
    01:18:59   2  FROM qwjw2010
    01:18:59   3  GROUP BY pair
    01:18:59   4  HAVING CORR(avg_a,avg_b)>0
    01:18:59   5  ORDER BY CORR(avg_a,avg_b)
    01:18:59   6  /
    
    PAIR    COUNT(PAIR) CORR(AVG_A,AVG_B)
    ------- ----------- -----------------
    usd_cad         189        .021278571
    aud_usd         189        .029606463
    usd_jpy         189        .040154359
    eur_usd         189         .12309825
    gbp_usd         189        .201797084
    usd_chf         189        .237863124

I noticed 2 pieces of information from the above 4 queries:
%ul
  %li
    usd_chf was the only pair to appear in all 4 queries
  %li
    The correlation was getting stronger as I moved closer to the present

I returned my attention to 2007 and asked the question,
"Is there any particular Week of Quarter where I see a connection between far-past and near-past?"

%br/
%br/

This time, instead of using the CORR() function I just multiplied the far-past-avg-gain with the near-past-avg-gain.

I passed this product into a predicate which filtered in rows where dependence appeared the most strong.

Also I sorted the results by this product.

The results are listed below:

%pre
  :preserve
    01:18:59 SQL> SELECT * FROM
    01:18:59   2  (
    01:18:59   3    SELECT
    01:18:59   4    woq_start_day
    01:18:59   5    ,woq
    01:18:59   6    ,avg_a
    01:18:59   7    ,avg_b
    01:18:59   8    ,row_cnt
    01:18:59   9    FROM qwjw2007
    01:18:59  10    WHERE avg_a * avg_b > 0
    01:18:59  11    AND pair = 'usd_chf'
    01:18:59  12    ORDER BY(avg_a * avg_b)DESC
    01:18:59  13  )
    01:18:59  14  WHERE rownum < 10
    01:18:59  15  /
    
    W        WOQ      AVG_A      AVG_B    ROW_CNT
    - ---------- ---------- ---------- ----------
    3         12 -.00713333 -.01954167        324
    2         11 -.00702857    -.01894        420
    2          9   -.012975   -.009625        320
    2         11 -.00702857   -.015155        560
    4         13 -.00893462 -.01128667        390
    5         13 -.00875385 -.01128667        390
    6          8 -.00667857 -.01297368        532
    3          9 -.00886071   -.009625        560
    2         11 -.00702857    -.01205        560
    
    9 rows selected.

It was in the above output that I first noticed week #11.  It appeared more times than any other week.
%br/
%br/

Next, I looked at data separated by the 2008-01-01 dividing line:

%pre
  :preserve
    01:18:59 SQL> SELECT * FROM
    01:18:59   2  (
    01:18:59   3    SELECT
    01:18:59   4    woq_start_day
    01:18:59   5    ,woq
    01:18:59   6    ,avg_a
    01:18:59   7    ,avg_b
    01:18:59   8    ,row_cnt
    01:18:59   9    FROM qwjw2008
    01:18:59  10    WHERE avg_a * avg_b > 0
    01:18:59  11    AND pair = 'usd_chf'
    01:18:59  12    ORDER BY(avg_a * avg_b)DESC
    01:18:59  13  )
    01:18:59  14  WHERE rownum < 10
    01:18:59  15  /
    
    W        WOQ      AVG_A      AVG_B    ROW_CNT
    - ---------- ---------- ---------- ----------
    2         11 -.00565625    -.03655        320
    3         12 -.00753667   -.023575        240
    2          9 -.00978947    -.01394        285
    2         11 -.00565625 -.01933333        480
    3          9   -.007075    -.01394        480
    5         13 -.00887667 -.01091818        330
    4         13  -.0087069 -.01091818        319
    3         12 -.00753667 -.01119333        450
    3         12 -.00753667 -.01059333        450
    
    9 rows selected.

I noticed week #11 again.  It only appeared twice but it was near the
top of the list which is where the strongest dependent rows sorted to.

Obviously I noticed weeks 9, 12 and 13 too.

For 2007, 2008 a money making strategy would have been to short the
usd_chf pair (shorting the usd_chf pair means buy CHF with USD) during
weeks 9, 11, 12, 13 of each quarter.

Next, I looked at data separated by the 2009-01-01 dividing line:

%pre
  :preserve
    01:18:59 SQL> SELECT * FROM
    01:18:59   2  (
    01:18:59   3    SELECT
    01:18:59   4    woq_start_day
    01:18:59   5    ,woq
    01:18:59   6    ,avg_a
    01:18:59   7    ,avg_b
    01:18:59   8    ,row_cnt
    01:18:59   9    FROM qwjw2009
    01:18:59  10    WHERE avg_a * avg_b > 0
    01:18:59  11    AND pair = 'usd_chf'
    01:18:59  12    ORDER BY(avg_a * avg_b)DESC
    01:18:59  13  )
    01:18:59  14  WHERE rownum < 10
    01:18:59  15  /
    
    W        WOQ      AVG_A      AVG_B    ROW_CNT
    - ---------- ---------- ---------- ----------
    2         11 -.00667222     -.0267        360
    6         11 -.00450833     -.0267        360
    3         11     -.0044     -.0267        350
    5         11 -.00437222     -.0267        360
    3         10 .006085714     .01772        175
    3         12 -.00897647    -.01051        340
    2         11 -.00667222    -.01396        360
    4         13 -.00727273 -.01217143        231
    4         11 -.00304722     -.0267        360
    
    9 rows selected.

I noticed that week #11 was very prominent.  Weeks 12 and 13 put in a weak showing and week 9 was completely absent from the list.

Next, I looked at data separated by the 2010-01-01 dividing line:

%br/
%br/


%pre
  :preserve
    01:18:59 SQL> SELECT * FROM
    01:18:59   2  (
    01:18:59   3    SELECT
    01:18:59   4    woq_start_day
    01:18:59   5    ,woq
    01:18:59   6    ,avg_a
    01:18:59   7    ,avg_b
    01:18:59   8    ,row_cnt
    01:18:59   9    FROM qwjw2010
    01:18:59  10    WHERE avg_a * avg_b > 0
    01:18:59  11    AND pair = 'usd_chf'
    01:18:59  12    ORDER BY(avg_a * avg_b)DESC
    01:18:59  13  )
    01:18:59  14  WHERE rownum < 10
    01:18:59  15  /
    
    W        WOQ      AVG_A      AVG_B    ROW_CNT
    - ---------- ---------- ---------- ----------
    2         11     -.0073    -.02556        200
    3         12    -.00725    -.02558        190
    3         11 -.00589487    -.02556        195
    6         11  -.0055675    -.02556        200
    3         12    -.00725    -.01826        190
    5         11   -.005155    -.02556        200
    4         11  -.0039925    -.02556        200
    2         12 -.00386486    -.02558        185
    4         13 -.00728857    -.01114        175
    
    9 rows selected.

From the above 4 queries it is obvious to me that simply shorting the usd_chf pair on the 11th week of every quarter would have been a lucrative trade.  Adding weeks 12 and 13 to the list would have made it more profitable.  

Markets are fickle; it seems plausible that 2011, 2012, 2013 will yield very different results.
%br/
%br/
If you have software talents, and a desire to duplicate my results, you will find a copy of the software I used to acquire this knowledge about week 11 of every quarter for usd_chf.
The software is here:
%br/
%br/
%a(href="https://github.com/bikle/rluck/tree/master/woq2010_1103/" target="t")
  https://github.com/bikle/rluck/tree/master/woq2010_1103/
%br/
%br/
