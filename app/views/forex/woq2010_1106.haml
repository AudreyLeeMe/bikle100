%a(href="/r10/site_map")Site Map
>
%a(href="/r10/forex")Forex
> 
%a(href="/forex/fx_cct")Current Correlation Trends
>  woq2010_1106
%h5 Week Of Quarter (woq2010_1106)

I found that the 10th week of any quarter is a good time to buy AUD with USD hold that position for 1 day.

I show some data from 2009, 2010:

%pre
  :preserve
    18:06:30 SQL> --
    18:06:30 SQL> -- qry_aud_usd_wk10.sql
    18:06:30 SQL> --
    18:06:30 SQL> 
    18:06:30 SQL> -- This shows results for going-long on aud_usd during week 10 of quarter and holding for 1 day.
    18:06:30 SQL> 
    18:06:30 SQL> SELECT
    18:06:30   2  pair
    18:06:30   3  ,ydate1
    18:06:30   4  -- Normalized daily gain:
    18:06:30   5  ,ROUND(ndgain,4)n_daily_gain
    18:06:30   6  ,yr
    18:06:30   7  ,woq
    18:06:30   8  FROM djd12
    18:06:30   9  WHERE pair = 'aud_usd'
    18:06:30  10  AND ydate1 > '2009-01-01'
    18:06:30  11  AND woq = 10
    18:06:30  12  ORDER BY ydate1
    18:06:30  13  /
    
    PAIR    YDATE1     N_DAILY_GAIN YR          WOQ
    ------- ---------- ------------ ---- ----------
    aud_usd 2009-03-05            0 2009         10
    aud_usd 2009-03-09        .0257 2009         10
    aud_usd 2009-03-10        .0037 2009         10
    aud_usd 2009-03-11       -.0037 2009         10
    aud_usd 2009-06-04        .0028 2009         10
    aud_usd 2009-06-08        .0164 2009         10
    aud_usd 2009-06-09        .0079 2009         10
    aud_usd 2009-06-10        .0189 2009         10
    aud_usd 2009-09-03        .0094 2009         10
    aud_usd 2009-09-08        .0003 2009         10
    aud_usd 2009-09-09        -.005 2009         10
    aud_usd 2009-12-03       -.0125 2009         10
    aud_usd 2009-12-07       -.0051 2009         10
    aud_usd 2009-12-08       -.0007 2009         10
    aud_usd 2009-12-09        .0095 2009         10
    aud_usd 2010-03-08        .0059 2010         10
    aud_usd 2010-03-09        .0035 2010         10
    aud_usd 2010-03-10       -.0022 2010         10
    aud_usd 2010-03-11        .0002 2010         10
    aud_usd 2010-06-07        .0049 2010         10
    aud_usd 2010-06-08        .0128 2010         10
    aud_usd 2010-06-09        .0158 2010         10
    aud_usd 2010-06-10        .0028 2010         10
    aud_usd 2010-09-07        .0046 2010         10
    aud_usd 2010-09-08        .0069 2010         10
    aud_usd 2010-09-09        .0011 2010         10
    
    26 rows selected.
    
    Elapsed: 00:00:00.05
    18:06:30 SQL> 
    18:06:30 SQL> exit
    Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
    With the Partitioning, OLAP, Data Mining and Real Application Testing options

How did I find out this fact?  Please read on.

%br/
%br/

I have a table named fxw loaded with Forex data from here:
%br/
%a(href="http://www.federalreserve.gov/releases/h10/hist/" target="f")
  http://www.federalreserve.gov/releases/h10/hist/
%br/
%br/

After I loaded that table, I built an SQL script which aggregates normalized-daily-gains for each currency pair and groups by Week-Of-Quarter.

Some output from the script is displayed below:

%pre
  :preserve
    SQL*Plus: Release 11.2.0.1.0 Production on Sat Nov 6 16:52:51 2010
    
    Copyright (c) 1982, 2009, Oracle.  All rights reserved.
    
    
    Connected to:
    Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
    With the Partitioning, OLAP, Data Mining and Real Application Testing options
    
    16:52:51 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';
    
    Session altered.
    
    Elapsed: 00:00:00.00
    16:52:51 SQL> 16:52:51 SQL> --
    16:52:51 SQL> -- qry_djd.sql
    16:52:51 SQL> --
    16:52:51 SQL> 
    16:52:51 SQL> -- I use this script to create a table which joins each row from fxw with another row in fxw which is 1 day ahead.
    16:52:51 SQL> -- Also I derive some data like the number of the quarter which the week is in and the daily gain for each day.
    16:52:51 SQL> 
    16:52:51 SQL> 
    16:52:51 SQL> CREATE OR REPLACE VIEW djd10 AS
    16:52:51   2  SELECT
    16:52:51   3  a.pair
    16:52:51   4  ,a.ydate ydate1
    16:52:51   5  -- ndgain is normalized daily gain
    16:52:51   6  ,(b.clse - a.clse)/a.clse ndgain
    16:52:51   7  ,TO_CHAR(a.ydate,'Q')qtr
    16:52:51   8  ,TO_CHAR(a.ydate,'YYYY')yr
    16:52:51   9  ,TO_CHAR(a.ydate,'WW')week_of_year
    16:52:51  10  FROM fxw a, fxw b
    16:52:51  11  WHERE a.pair = b.pair
    16:52:51  12  AND b.ydate - a.ydate = 1
    16:52:51  13  -- I want to compare this to my hourly data which I have for after 2009-01-01
    16:52:51  14  AND a.ydate > '2009-01-01'
    16:52:51  15  /
    
    View created.
    
    Elapsed: 00:00:00.04
    16:52:51 SQL> 
    16:52:51 SQL> -- Derive woq
    16:52:51 SQL> 
    16:52:51 SQL> CREATE OR REPLACE VIEW djd12 AS
    16:52:51   2  SELECT
    16:52:51   3  pair
    16:52:51   4  ,ydate1
    16:52:51   5  ,ndgain
    16:52:51   6  ,yr
    16:52:51   7  ,week_of_year - 13*(qtr-1)woq
    16:52:51   8  ,week_of_year - 13*(qtr-1)week_of_qtr
    16:52:51   9  FROM djd10
    16:52:51  10  /
    
    View created.
    
    Elapsed: 00:00:00.05
    16:52:51 SQL> 
    16:52:51 SQL> -- Now I can aggregate ndgain and GROUP BY week_of_qtr
    16:52:51 SQL> SELECT
    16:52:51   2  pair,week_of_qtr
    16:52:51   3  ,ROUND(AVG(ndgain),4)avg_ndgain
    16:52:51   4  ,ROUND(SUM(ndgain),4)sum_ndgain
    16:52:51   5  ,COUNT(ndgain)
    16:52:51   6  ,ROUND(STDDEV(ndgain),4)stddev_ndgain
    16:52:51   7  FROM djd12
    16:52:51   8  WHERE week_of_qtr > 0
    16:52:51   9  GROUP BY pair,week_of_qtr
    16:52:51  10  -- I want more than 12 pips / day
    16:52:51  11  HAVING ABS(AVG(ndgain)) > 0.0012
    16:52:51  12  ORDER BY ABS(AVG(ndgain))DESC
    16:52:51  13  /
    
    PAIR    WEEK_OF_QTR AVG_NDGAIN SUM_NDGAIN COUNT(NDGAIN) STDDEV_NDGAIN
    ------- ----------- ---------- ---------- ------------- -------------
    aud_usd          10      .0048      .1239            26         .0084
    eur_usd           6     -.0037     -.0958            26         .0062
    gbp_usd           6     -.0031     -.0811            26         .0073
    usd_chf          11     -.0025     -.0709            28         .0105
    aud_usd           1      .0025      .0749            30         .0097
    aud_usd          11      .0024      .0683            28         .0128
    usd_jpy           1     -.0024     -.0718            30         .0082
    usd_cad          10     -.0024     -.0618            26         .0073
    usd_jpy           5     -.0023     -.0647            28         .0084
    eur_usd          11      .0022      .0628            28          .011
    usd_cad           6      .0019      .0501            26         .0078
    gbp_usd          13      .0019       .044            23          .007
    usd_cad           1     -.0018     -.0549            30         .0058
    gbp_usd          11      .0018      .0506            28         .0107
    aud_usd           8      .0018      .0462            26         .0106
    gbp_usd           2      .0017       .052            30         .0073
    usd_chf           8     -.0017     -.0431            26         .0062
    eur_usd           5     -.0016     -.0462            28         .0087
    usd_chf           3      .0016      .0491            30          .007
    usd_chf           6      .0016      .0419            26          .006
    usd_cad          11     -.0016     -.0441            28         .0087
    gbp_usd          10      .0016      .0408            26         .0073
    aud_usd           7     -.0016     -.0406            26         .0116
    gbp_usd           1      .0016      .0468            30         .0083
    aud_usd           5     -.0015     -.0427            28         .0106
    aud_usd           9      .0015      .0378            26         .0114
    usd_cad           5      .0014      .0405            28         .0063
    aud_usd           6     -.0014     -.0374            26         .0114
    eur_usd          13      .0013       .031            23         .0081
    usd_jpy           2     -.0013       -.04            30          .007
    usd_chf          13     -.0013     -.0304            23         .0073
    usd_cad          12      .0013      .0362            28         .0069
    usd_chf           9     -.0012     -.0324            26         .0062
    usd_chf          12     -.0012     -.0345            28          .007
    eur_usd           8      .0012      .0315            26         .0063
    gbp_usd           7      .0012      .0315            26         .0064
    usd_chf           5      .0012      .0338            28          .009
    
    37 rows selected.
    
    Elapsed: 00:00:02.54
    16:52:54 SQL> 
    16:52:54 SQL> exit
    Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
    With the Partitioning, OLAP, Data Mining and Real Application Testing options

Notice the first row in the above output.

That row tells me that if I go-long (instead of short) on the pair aud_usd, I would have done well in 2009, 2010.

Past results are no guarantee of future results, but since I have an opinion about the aud_usd pair,
I find the above output useful for deciding when to trade.
%br/
%br/

Currently, I am bullish on AUD, CAD and CHF.  I am bearish on USD.

So each Sunday I check the above output before the Forex market opens for the week.

Today is 2010-11-06.

The 7th week of the quarter starts tomorrow.

I see no attractive trades for the  7th week of the quarter.

For the 8th week though, I see two attractive trades.

For 2009 and 2010 I see that on the 8th week of the quarter the aud_usd pair gained an average of 18 pips / day.

Also I see that usd_chf lost an average of 17 pips / day.

Both of those rows correspond to sentiment which is bullish towards AUD and CHF and bearish towards USD.

So, during the 8th week of the quarter I will go-long on aud_usd and go-short on usd_chf.

The 8th week of the quarter starts on Sunday 2010-11-14.
%br/
%br/
How risky will these trades be?
%br/
%br/
Answer: Extremely risky.
%br/
%br/
On the right hand side of the output I show a column which corresponds to the Standard Deviation of the gains in the past.
%br/
%br/
For the aud_usd pair, that value is 106 pips.
I see that value as the amount of money I could easily lose in this trade.
%br/
%br/
To gain 18 pips on the aud_usd I need to be comfortable with a loss of 106 pips. 
If that amount of loss makes me uncomfortable, I should avoid the trade.
%br/
%br/
On a position worth $10,000 an 18 pip gain would give me only $18 which is less than a tank of gas or trip to Safeway.
%br/
%br/
And a 106 pip loss on that position would be $106 which is significant to a lot of people.
%br/
%br/
Compare the aud_usd trade to the usd_chf trade.  The usd_chf trade shows much less risk.
The value for standard deviation is 62 pips which is much less than 106 pips.

%br/
%br/

Based on this analysis, I feel that I should short usd_chf during the week of 2010-11-14.


%br/

Here are the URLs for aud_usd and usd_chf:
%br/

%a(href="https://www.google.com/finance?q=audusd" target="g")
  https://www.google.com/finance?q=audusd
%br/
%a(href="https://www.google.com/finance?q=usdchf" target="g")
  https://www.google.com/finance?q=usdchf

%br/
%br/
%br/



