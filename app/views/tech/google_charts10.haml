%a(href="/r10/site_map")Site Map
>
%a(href="/tech")Tech
> google_charts
%h5 google_charts
%br/
%br/
A simple Google Chart is displayed below:
%br/
%br/
<img src="http://chart.apis.google.com/chart?chxr=0,0,46&chxt=y&chs=300x225&cht=lc&chco=3D7930&chd=s:Xhiugtqi&chg=14.3,-1,1,1&chls=2,4,0&chm=B,C5D4B5BB,0,0,0&chtt=Bikle+Chart+2010-11-19+22%3A20+GMT" width="300" height="225" alt="Bikle Chart 2010-11-19 22:20 GMT" />
%br/
%br/
Here is the code behind the above chart:
%br/
%br/
  
:escaped
  <img src="http://chart.apis.google.com/chart?chxr=0,0,46&chxt=y&chs=300x225&cht=lc&chco=3D7930&chd=s:Xhiugtqi&chg=14.3,-1,1,1&chls=2,4,0&chm=B,C5D4B5BB,0,0,0&chtt=Bikle+Chart+2010-11-19+22%3A20+GMT" width="300" height="225" alt="Bikle Chart 2010-11-19 22:20 GMT" />
%br/
%br/
I can see that the chart is just one img-element with a long src attribute.
%br/
%br/
The data in the chart has been encoded and passed to Google via the chd parameter of the src attribute:
%br/
%br/
chd=s:Xhiugtqi
%br/
%br/
Also note that I use the chxr attribute like this:
%br/
%br/
chxr=0,0,46
%br/
%br/
According to the Google documentation, the chxr attribute controls the axis.
%br/
%br/
The documentation on chxr says this:
:escaped
  chxr= <axis_index>,  <start_val>,  <end_val>, <step>|...

%br/
%br/
To me, start_val and end_val were at frist obvious; axis_index was not.
Then I found a description of axis_index:
%br/
%br/
This is a zero-based index into the axis array specified by chxt. For example, the r-axis would be 1 in chxt=x,r,y.
%br/
%br/
So, I looked for chxt in the above example and I found this:
%br/
%br/
chxt=y
%br/
%br/
And, now I see that 
%br/
chxr=0,0,46
%br/
is a signal to Google-charts to scale the y axis where the minimum is 0 and the maximum is 46.
%br/
%br/
I used the above chart as my introduction to Google Charts.
%br/
%br/
After I created the above chart,
I started on the task of creating a chart which can react to numbers submitted by a form:
%br/
%br/

%form#f1(action="/tech/google_charts10#f1" method="get")
  %input.input_cb#n0(type="checkbox" value="0" name="n0")0
  %br/
  %input.input_cb#n10(type="checkbox" value="10" name="n10")10
  %br/
  %input.input_cb#n40(type="checkbox" value="40" name="n40")40
  %br/
  %input.input_cb#n20(type="checkbox" value="20" name="n20")20
  %br/
  %input.input_cb#n30(type="checkbox" value="30" name="n30")30
  %br/
  %input#is0(type="submit" value="Click Here to Draw Chart")
  %br/

%br/
%br/

/
  The JavaScript below is a demo of some simple jQuery syntax mixed with a JavaScript function I obtained from Google named: simpleEncode().
  I start by filling valueArray with values from the form.
  Then I pass valueArray to simpleEncode() which does the encoding.
  I use a variable named chd_s to capture output from simpleEncode().
  Next, I attach chd_s to the end of a string named src_s.
  Then I pass src_s to a jQuery call which edits the img-element-src-attribute.
  Next, I use a jQuery call to serve the img-element.

:javascript
  $(document).ready(function() {

    $("#n0").attr("checked","#{params[:n0]}");
    $("#n10").attr("checked","#{params[:n10]}");
    $("#n40").attr("checked","#{params[:n40]}");
    $("#n20").attr("checked","#{params[:n20]}");
    $("#n30").attr("checked","#{params[:n30]}");

    function simpleEncode(valueArray,maxValue) {
      var simpleEncoding = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
      var chartData = ['s:'];
      for (var i = 0; i < valueArray.length; i++) {
        var currentValue = valueArray[i];
        if (!isNaN(currentValue) && currentValue >= 0) {
        chartData.push(simpleEncoding.charAt(Math.round((simpleEncoding.length-1) * 
          currentValue / maxValue)));
        }
          else {
          chartData.push('_');
          }
      }
      return chartData.join('');
    }

    var valueArray = new Array();

    valueArray.push("#{params[:n0]}");
    valueArray.push("#{params[:n10]}");
    valueArray.push("#{params[:n40]}");
    valueArray.push("#{params[:n20]}");
    valueArray.push("#{params[:n30]}");
 
    var maxValue = 45;
    var se_out1 = simpleEncode(valueArray, maxValue);
    var valueArray = new Array();

    var chd_s = "&chd=" + se_out1;

    var src_s = "http://chart.apis.google.com/chart?chxr=0,0,46&chxt=y&chs=300x225&cht=lc&chco=3D7930&chg=14.3,-1,1,1&chls=2,4,0&chm=B,C5D4B5BB,0,0,0&chtt=Bikle+Chart+2010-11-19+22%3A20+GMT" + chd_s ;

    $("img#c10").attr("src",src_s);

    $("img#c10").hide();

    $("img#c10").show("slow");

  });

%img#c10(width="300" height="225" alt="Bikle Chart 2010-11-19 22:20 GMT")

%br/
%br/
The above chart is similar to the first chart on the page.
The only difference is that I am use jQuery to dynamically set the value of the chd parameter of the src attribute.
My jQuery code depends on a JavaScript snippet I obtained from Google:
%br/
%br/

%a(href="http://code.google.com/apis/chart/docs/data_formats.html#encoding_data" target="g")
  http://code.google.com/apis/chart/docs/data_formats.html#encoding_data
%br/
%br/
If you want to see my code, just use the view-source method in your browser (perhaps via mouse-right-click).
%br/
%br/
