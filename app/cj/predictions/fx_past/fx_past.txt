
SQL*Plus: Release 11.2.0.1.0 Production on Sun Apr 24 06:43:40 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

06:43:40 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
06:43:40 SQL> 06:43:40 SQL> --
06:43:40 SQL> -- fx_past.sql
06:43:40 SQL> --
06:43:40 SQL> 
06:43:40 SQL> -- I use this script to join 3 types of tables:
06:43:40 SQL> -- prices,gains
06:43:40 SQL> -- gatt-scores
06:43:40 SQL> -- gattn-scores
06:43:40 SQL> 
06:43:40 SQL> -- I can pattern off this script:
06:43:40 SQL> -- /pt/s/rluck/svm62/qrs2.sql
06:43:40 SQL> 
06:43:40 SQL> DROP TABLE fxpst10;

Table dropped.

Elapsed: 00:00:00.04
06:43:40 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.17
06:43:41 SQL> CREATE TABLE fxpst10 COMPRESS AS
06:43:41   2  SELECT
06:43:41   3  pair
06:43:41   4  ,ydate
06:43:41   5  ,clse
06:43:41   6  ,prdate
06:43:41   7  ,(LEAD(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g1
06:43:41   8  ,(LEAD(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g6
06:43:41   9  ,clse price_0hr
06:43:41  10  ,LEAD(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) price_1hr
06:43:41  11  ,LEAD(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) price_6hr
06:43:41  12  FROM di5min
06:43:41  13  WHERE ydate > '2011-01-30'
06:43:41  14  AND clse > 0
06:43:41  15  ORDER BY pair,ydate
06:43:41  16  /

Table created.

Elapsed: 00:00:02.26
06:43:43 SQL> 
06:43:43 SQL> ANALYZE TABLE fxpst10 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.34
06:43:43 SQL> 
06:43:43 SQL> DROP TABLE fxpst12;

Table dropped.

Elapsed: 00:00:00.04
06:43:43 SQL> CREATE TABLE fxpst12 COMPRESS AS
06:43:43   2  SELECT
06:43:43   3  m.pair
06:43:43   4  ,m.ydate
06:43:43   5  ,m.clse
06:43:43   6  ,(l.score-s.score)	 score_diff
06:43:43   7  ,ROUND(l.score-s.score,1) rscore_diff1
06:43:43   8  ,ROUND(l.score-s.score,2) rscore_diff2
06:43:43   9  ,m.g1
06:43:43  10  ,m.g6
06:43:43  11  ,price_0hr
06:43:43  12  ,price_1hr
06:43:43  13  ,price_6hr
06:43:43  14  ,m.g6-m.g1 g5
06:43:43  15  ,CORR(l.score-s.score,g6)OVER(PARTITION BY l.pair ORDER BY l.ydate ROWS BETWEEN 12*24*1 PRECEDING AND CURRENT ROW)rnng_crr1
06:43:43  16  FROM svm62scores l,svm62scores s,fxpst10 m
06:43:43  17  WHERE l.targ='gatt'
06:43:43  18  AND   s.targ='gattn'
06:43:43  19  AND l.prdate = s.prdate
06:43:43  20  AND l.prdate = m.prdate
06:43:43  21  -- Speed things up:
06:43:43  22  AND l.ydate > '2011-01-30'
06:43:43  23  AND s.ydate > '2011-01-30'
06:43:43  24  /

Table created.

Elapsed: 00:00:04.43
06:43:48 SQL> 
06:43:48 SQL> ANALYZE TABLE fxpst12 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.42
06:43:48 SQL> 
06:43:48 SQL> -- rpt
06:43:48 SQL> -- This SELECT gives me a list of recent week-names.
06:43:48 SQL> -- I use minday, maxday to help me understand the contents of each week.
06:43:48 SQL> SELECT
06:43:48   2  TO_CHAR(ydate,'WW')
06:43:48   3  ,MIN(ydate)
06:43:48   4  ,TO_CHAR(MIN(ydate),'Dy')minday
06:43:48   5  ,COUNT(ydate)
06:43:48   6  ,MAX(ydate)
06:43:48   7  ,TO_CHAR(MAX(ydate),'Dy')maxday
06:43:48   8  FROM fxpst12
06:43:48   9  GROUP BY
06:43:48  10  TO_CHAR(ydate,'WW')
06:43:48  11  ORDER BY
06:43:48  12  MIN(ydate)
06:43:48  13  /

TO MIN(YDATE)	       MIN COUNT(YDATE) MAX(YDATE)	    MAX
-- ------------------- --- ------------ ------------------- ---
05 2011-01-30 22:15:00 Sun	  15663 2011-02-04 21:55:00 Fri
06 2011-02-06 22:15:00 Sun	  15648 2011-02-11 21:55:00 Fri
07 2011-02-13 22:15:00 Sun	  15663 2011-02-18 21:55:00 Fri
08 2011-02-20 22:15:00 Sun	  15675 2011-02-25 21:55:00 Fri
09 2011-02-27 22:15:00 Sun	  15661 2011-03-04 21:55:00 Fri
10 2011-03-06 22:15:00 Sun	  15659 2011-03-11 21:55:00 Fri
11 2011-03-13 21:15:00 Sun	  15675 2011-03-18 20:55:00 Fri
12 2011-03-20 21:15:00 Sun	  15672 2011-03-25 20:55:00 Fri
13 2011-03-27 21:15:00 Sun	  15675 2011-04-01 20:55:00 Fri
14 2011-04-03 21:15:00 Sun	  15675 2011-04-08 20:55:00 Fri
15 2011-04-10 21:15:00 Sun	  15674 2011-04-15 20:55:00 Fri
16 2011-04-17 21:15:00 Sun	  15673 2011-04-22 20:55:00 Fri

12 rows selected.

Elapsed: 00:00:00.11
06:43:48 SQL> 
06:43:48 SQL> -- This SELECT gives me text for a-tags
06:43:48 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
06:43:48 SQL> SET TIME off TIMING off ECHO off HEADING off
<p>
<table id='table_fx_past'>
<tr>
<td>
Week: 2011-01-30 Through 2011-02-04
</td>
</tr>
<tr>
<td>
Week: 2011-02-06 Through 2011-02-11
</td>
</tr>
<tr>
<td>
Week: 2011-02-13 Through 2011-02-18
</td>
</tr>
<tr>
<td>
Week: 2011-02-20 Through 2011-02-25
</td>
</tr>
<tr>
<td>
Week: 2011-02-27 Through 2011-03-04
</td>
</tr>
<tr>
<td>
Week: 2011-03-06 Through 2011-03-11
</td>
</tr>
<tr>
<td>
Week: 2011-03-13 Through 2011-03-18
</td>
</tr>
<tr>
<td>
Week: 2011-03-20 Through 2011-03-25
</td>
</tr>
<tr>
<td>
Week: 2011-03-27 Through 2011-04-01
</td>
</tr>
<tr>
<td>
Week: 2011-04-03 Through 2011-04-08
</td>
</tr>
<tr>
<td>
Week: 2011-04-10 Through 2011-04-15
</td>
</tr>
<tr>
<td>
Week: 2011-04-17 Through 2011-04-22
</td>
</tr>
</table>
<p>

12 rows selected.<br>
<br>



@fx_past_week.sql 2011-01-30
@fx_past_week.sql 2011-02-06
@fx_past_week.sql 2011-02-13
@fx_past_week.sql 2011-02-20
@fx_past_week.sql 2011-02-27
@fx_past_week.sql 2011-03-06
@fx_past_week.sql 2011-03-13
@fx_past_week.sql 2011-03-20
@fx_past_week.sql 2011-03-27
@fx_past_week.sql 2011-04-03
@fx_past_week.sql 2011-04-10
@fx_past_week.sql 2011-04-17

12 rows selected.

Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
