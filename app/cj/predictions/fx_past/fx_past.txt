
SQL*Plus: Release 11.2.0.1.0 Production on Sun Mar 20 22:53:36 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

22:53:37 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
22:53:37 SQL> 22:53:37 SQL> --
22:53:37 SQL> -- fx_past.sql
22:53:37 SQL> --
22:53:37 SQL> 
22:53:37 SQL> -- I use this script to join 3 types of tables:
22:53:37 SQL> -- prices,gains
22:53:37 SQL> -- gatt-scores
22:53:37 SQL> -- gattn-scores
22:53:37 SQL> 
22:53:37 SQL> -- I can pattern off this script:
22:53:37 SQL> -- /pt/s/rluck/svm62/qrs2.sql
22:53:37 SQL> 
22:53:37 SQL> DROP TABLE fxpst10;

Table dropped.

Elapsed: 00:00:00.17
22:53:37 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.52
22:53:37 SQL> CREATE TABLE fxpst10 COMPRESS AS
22:53:37   2  SELECT
22:53:37   3  pair
22:53:37   4  ,ydate
22:53:37   5  ,clse
22:53:37   6  ,prdate
22:53:37   7  ,(LEAD(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g2
22:53:37   8  ,(LEAD(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g6
22:53:37   9  FROM di5min
22:53:37  10  WHERE ydate > sysdate - (7 * 7)
22:53:37  11  AND clse > 0
22:53:37  12  ORDER BY pair,ydate
22:53:37  13  /

Table created.

Elapsed: 00:00:01.22
22:53:38 SQL> 
22:53:38 SQL> ANALYZE TABLE fxpst10 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.19
22:53:39 SQL> 
22:53:39 SQL> DROP TABLE fxpst12;

Table dropped.

Elapsed: 00:00:00.16
22:53:39 SQL> CREATE TABLE fxpst12 COMPRESS AS
22:53:39   2  SELECT
22:53:39   3  m.pair
22:53:39   4  ,m.ydate
22:53:39   5  ,m.clse
22:53:39   6  ,ROUND(l.score-s.score,1) rscore_diff1
22:53:39   7  ,ROUND(l.score-s.score,2) rscore_diff2
22:53:39   8  ,m.g2
22:53:39   9  ,m.g6
22:53:39  10  ,m.g6-m.g2 g4
22:53:39  11  ,CORR(l.score-s.score,g6)OVER(PARTITION BY l.pair ORDER BY l.ydate ROWS BETWEEN 12*24*1 PRECEDING AND CURRENT ROW)rnng_crr1
22:53:39  12  FROM svm62scores l,svm62scores s,fxpst10 m
22:53:39  13  WHERE l.targ='gatt'
22:53:39  14  AND   s.targ='gattn'
22:53:39  15  AND l.prdate = s.prdate
22:53:39  16  AND l.prdate = m.prdate
22:53:39  17  -- Speed things up:
22:53:39  18  AND l.ydate > sysdate - (7 * 7)
22:53:39  19  AND s.ydate > sysdate - (7 * 7)
22:53:39  20  /

Table created.

Elapsed: 00:00:01.01
22:53:40 SQL> 
22:53:40 SQL> ANALYZE TABLE fxpst12 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.15
22:53:40 SQL> 
22:53:40 SQL> -- rpt
22:53:40 SQL> -- This SELECT gives me a list of recent week-names.
22:53:40 SQL> -- I use minday, maxday to help me understand the contents of each week.
22:53:40 SQL> SELECT
22:53:40   2  TO_CHAR(ydate,'WW')
22:53:40   3  ,MIN(ydate)
22:53:40   4  ,TO_CHAR(MIN(ydate),'Dy')minday
22:53:40   5  ,COUNT(ydate)
22:53:40   6  ,MAX(ydate)
22:53:40   7  ,TO_CHAR(MAX(ydate),'Dy')maxday
22:53:40   8  FROM fxpst12
22:53:40   9  GROUP BY
22:53:40  10  TO_CHAR(ydate,'WW')
22:53:40  11  ORDER BY
22:53:40  12  MIN(ydate)
22:53:40  13  /

TO MIN(YDATE)	       MIN COUNT(YDATE) MAX(YDATE)	    MAX
-- ------------------- --- ------------ ------------------- ---
05 2011-01-30 22:55:00 Sun	   7758 2011-02-04 21:55:00 Fri
06 2011-02-06 22:15:00 Sun	   5304 2011-02-11 21:55:00 Fri
07 2011-02-13 22:15:00 Sun	   4271 2011-02-18 21:55:00 Fri
08 2011-02-20 22:15:00 Sun	   2991 2011-02-25 21:55:00 Fri
09 2011-02-27 22:15:00 Sun	   1838 2011-03-04 21:55:00 Fri
10 2011-03-06 22:15:00 Sun	   1424 2011-03-11 21:55:00 Fri
11 2011-03-13 21:15:00 Sun	   7628 2011-03-18 20:45:00 Fri

7 rows selected.

Elapsed: 00:00:00.03
22:53:40 SQL> 
22:53:40 SQL> -- This SELECT gives me text for a-tags
22:53:40 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
22:53:40 SQL> SET TIME off TIMING off ECHO off PAGESIZE 123 LINESIZE 77 TRIMSPOOL ON

WWEEK
-----------------------------
2011-01-30 Through 2011-02-04
2011-02-06 Through 2011-02-11
2011-02-13 Through 2011-02-18
2011-02-20 Through 2011-02-25
2011-02-27 Through 2011-03-04
2011-03-06 Through 2011-03-11
2011-03-13 Through 2011-03-18

7 rows selected.

Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

SQL*Plus: Release 11.2.0.1.0 Production on Mon Mar 21 02:00:40 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

02:00:40 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.01
02:00:40 SQL> 02:00:40 SQL> --
02:00:40 SQL> -- fx_past.sql
02:00:40 SQL> --
02:00:40 SQL> 
02:00:40 SQL> -- I use this script to join 3 types of tables:
02:00:40 SQL> -- prices,gains
02:00:40 SQL> -- gatt-scores
02:00:40 SQL> -- gattn-scores
02:00:40 SQL> 
02:00:40 SQL> -- I can pattern off this script:
02:00:40 SQL> -- /pt/s/rluck/svm62/qrs2.sql
02:00:40 SQL> 
02:00:40 SQL> DROP TABLE fxpst10;

Table dropped.

Elapsed: 00:00:00.89
02:00:41 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.36
02:00:41 SQL> CREATE TABLE fxpst10 COMPRESS AS
02:00:41   2  SELECT
02:00:41   3  pair
02:00:41   4  ,ydate
02:00:41   5  ,clse
02:00:41   6  ,prdate
02:00:41   7  ,(LEAD(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g2
02:00:41   8  ,(LEAD(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g6
02:00:41   9  FROM di5min
02:00:41  10  WHERE ydate > sysdate - (7 * 7)
02:00:41  11  AND clse > 0
02:00:41  12  ORDER BY pair,ydate
02:00:41  13  /

Table created.

Elapsed: 00:00:02.82
02:00:44 SQL> 
02:00:44 SQL> ANALYZE TABLE fxpst10 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.69
02:00:45 SQL> 
02:00:45 SQL> DROP TABLE fxpst12;

Table dropped.

Elapsed: 00:00:00.22
02:00:45 SQL> CREATE TABLE fxpst12 COMPRESS AS
02:00:45   2  SELECT
02:00:45   3  m.pair
02:00:45   4  ,m.ydate
02:00:45   5  ,m.clse
02:00:45   6  ,ROUND(l.score-s.score,1) rscore_diff1
02:00:45   7  ,ROUND(l.score-s.score,2) rscore_diff2
02:00:45   8  ,m.g2
02:00:45   9  ,m.g6
02:00:45  10  ,m.g6-m.g2 g4
02:00:45  11  ,CORR(l.score-s.score,g6)OVER(PARTITION BY l.pair ORDER BY l.ydate ROWS BETWEEN 12*24*1 PRECEDING AND CURRENT ROW)rnng_crr1
02:00:45  12  FROM svm62scores l,svm62scores s,fxpst10 m
02:00:45  13  WHERE l.targ='gatt'
02:00:45  14  AND   s.targ='gattn'
02:00:45  15  AND l.prdate = s.prdate
02:00:45  16  AND l.prdate = m.prdate
02:00:45  17  -- Speed things up:
02:00:45  18  AND l.ydate > sysdate - (7 * 7)
02:00:45  19  AND s.ydate > sysdate - (7 * 7)
02:00:45  20  /

Table created.

Elapsed: 00:00:00.99
02:00:46 SQL> 
02:00:46 SQL> ANALYZE TABLE fxpst12 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.07
02:00:46 SQL> 
02:00:46 SQL> -- rpt
02:00:46 SQL> -- This SELECT gives me a list of recent week-names.
02:00:46 SQL> -- I use minday, maxday to help me understand the contents of each week.
02:00:46 SQL> SELECT
02:00:46   2  TO_CHAR(ydate,'WW')
02:00:46   3  ,MIN(ydate)
02:00:46   4  ,TO_CHAR(MIN(ydate),'Dy')minday
02:00:46   5  ,COUNT(ydate)
02:00:46   6  ,MAX(ydate)
02:00:46   7  ,TO_CHAR(MAX(ydate),'Dy')maxday
02:00:46   8  FROM fxpst12
02:00:46   9  GROUP BY
02:00:46  10  TO_CHAR(ydate,'WW')
02:00:46  11  ORDER BY
02:00:46  12  MIN(ydate)
02:00:46  13  /

TO MIN(YDATE)	       MIN COUNT(YDATE) MAX(YDATE)	    MAX
-- ------------------- --- ------------ ------------------- ---
05 2011-01-31 02:05:00 Mon	   7340 2011-02-04 21:55:00 Fri
06 2011-02-06 22:15:00 Sun	   5644 2011-02-11 21:55:00 Fri
07 2011-02-13 22:15:00 Sun	   4271 2011-02-18 21:55:00 Fri
08 2011-02-20 22:15:00 Sun	   3230 2011-02-25 21:55:00 Fri
09 2011-02-27 22:15:00 Sun	   3885 2011-03-04 21:55:00 Fri
10 2011-03-06 22:15:00 Sun	   1594 2011-03-11 21:55:00 Fri
11 2011-03-13 21:15:00 Sun	   8375 2011-03-18 20:45:00 Fri

7 rows selected.

Elapsed: 00:00:00.04
02:00:46 SQL> 
02:00:46 SQL> -- This SELECT gives me text for a-tags
02:00:46 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
02:00:46 SQL> SET TIME off TIMING off ECHO off
<p>
<table id='table_fx_past'>
<tr>
<th scope="col">
WWEEK
</th>
</tr>
<tr>
<td>
2011-01-31 Through 2011-02-04
</td>
</tr>
<tr>
<td>
2011-02-06 Through 2011-02-11
</td>
</tr>
<tr>
<td>
2011-02-13 Through 2011-02-18
</td>
</tr>
<tr>
<td>
2011-02-20 Through 2011-02-25
</td>
</tr>
<tr>
<td>
2011-02-27 Through 2011-03-04
</td>
</tr>
<tr>
<td>
2011-03-06 Through 2011-03-11
</td>
</tr>
<tr>
<td>
2011-03-13 Through 2011-03-18
</td>
</tr>
</table>
<p>

7 rows selected.<br>
<br>


Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

SQL*Plus: Release 11.2.0.1.0 Production on Mon Mar 21 03:05:50 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

03:05:50 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
03:05:50 SQL> 03:05:50 SQL> --
03:05:50 SQL> -- fx_past.sql
03:05:50 SQL> --
03:05:50 SQL> 
03:05:50 SQL> -- I use this script to join 3 types of tables:
03:05:50 SQL> -- prices,gains
03:05:50 SQL> -- gatt-scores
03:05:50 SQL> -- gattn-scores
03:05:50 SQL> 
03:05:50 SQL> -- I can pattern off this script:
03:05:50 SQL> -- /pt/s/rluck/svm62/qrs2.sql
03:05:50 SQL> 
03:05:50 SQL> DROP TABLE fxpst10;

Table dropped.

Elapsed: 00:00:00.63
03:05:51 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.38
03:05:51 SQL> CREATE TABLE fxpst10 COMPRESS AS
03:05:51   2  SELECT
03:05:51   3  pair
03:05:51   4  ,ydate
03:05:51   5  ,clse
03:05:51   6  ,prdate
03:05:51   7  ,(LEAD(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g2
03:05:51   8  ,(LEAD(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g6
03:05:51   9  FROM di5min
03:05:51  10  WHERE ydate > sysdate - (7 * 7)
03:05:51  11  AND clse > 0
03:05:51  12  ORDER BY pair,ydate
03:05:51  13  /

Table created.

Elapsed: 00:00:02.57
03:05:54 SQL> 
03:05:54 SQL> ANALYZE TABLE fxpst10 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.28
03:05:54 SQL> 
03:05:54 SQL> DROP TABLE fxpst12;

Table dropped.

Elapsed: 00:00:00.11
03:05:54 SQL> CREATE TABLE fxpst12 COMPRESS AS
03:05:54   2  SELECT
03:05:54   3  m.pair
03:05:54   4  ,m.ydate
03:05:54   5  ,m.clse
03:05:54   6  ,ROUND(l.score-s.score,1) rscore_diff1
03:05:54   7  ,ROUND(l.score-s.score,2) rscore_diff2
03:05:54   8  ,m.g2
03:05:54   9  ,m.g6
03:05:54  10  ,m.g6-m.g2 g4
03:05:54  11  ,CORR(l.score-s.score,g6)OVER(PARTITION BY l.pair ORDER BY l.ydate ROWS BETWEEN 12*24*1 PRECEDING AND CURRENT ROW)rnng_crr1
03:05:54  12  FROM svm62scores l,svm62scores s,fxpst10 m
03:05:54  13  WHERE l.targ='gatt'
03:05:54  14  AND   s.targ='gattn'
03:05:54  15  AND l.prdate = s.prdate
03:05:54  16  AND l.prdate = m.prdate
03:05:54  17  -- Speed things up:
03:05:54  18  AND l.ydate > sysdate - (7 * 7)
03:05:54  19  AND s.ydate > sysdate - (7 * 7)
03:05:54  20  /

Table created.

Elapsed: 00:00:01.14
03:05:55 SQL> 
03:05:55 SQL> ANALYZE TABLE fxpst12 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.15
03:05:55 SQL> 
03:05:55 SQL> -- rpt
03:05:55 SQL> -- This SELECT gives me a list of recent week-names.
03:05:55 SQL> -- I use minday, maxday to help me understand the contents of each week.
03:05:55 SQL> SELECT
03:05:55   2  TO_CHAR(ydate,'WW')
03:05:55   3  ,MIN(ydate)
03:05:55   4  ,TO_CHAR(MIN(ydate),'Dy')minday
03:05:55   5  ,COUNT(ydate)
03:05:55   6  ,MAX(ydate)
03:05:55   7  ,TO_CHAR(MAX(ydate),'Dy')maxday
03:05:55   8  FROM fxpst12
03:05:55   9  GROUP BY
03:05:55  10  TO_CHAR(ydate,'WW')
03:05:55  11  ORDER BY
03:05:55  12  MIN(ydate)
03:05:55  13  /

TO MIN(YDATE)	       MIN COUNT(YDATE) MAX(YDATE)	    MAX
-- ------------------- --- ------------ ------------------- ---
05 2011-01-31 03:10:00 Mon	   7197 2011-02-04 21:55:00 Fri
06 2011-02-06 22:15:00 Sun	   5644 2011-02-11 21:55:00 Fri
07 2011-02-13 22:15:00 Sun	   4271 2011-02-18 21:55:00 Fri
08 2011-02-20 22:15:00 Sun	   3230 2011-02-25 21:55:00 Fri
09 2011-02-27 22:15:00 Sun	   3885 2011-03-04 21:55:00 Fri
10 2011-03-06 22:15:00 Sun	   1594 2011-03-11 21:55:00 Fri
11 2011-03-13 21:15:00 Sun	   8635 2011-03-18 20:45:00 Fri

7 rows selected.

Elapsed: 00:00:00.03
03:05:55 SQL> 
03:05:55 SQL> -- This SELECT gives me text for a-tags
03:05:55 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
03:05:55 SQL> SET TIME off TIMING off ECHO off
<p>
<table id='table_fx_past'>
<tr>
<th scope="col">
WWEEK
</th>
</tr>
<tr>
<td>
2011-01-31 Through 2011-02-04
</td>
</tr>
<tr>
<td>
2011-02-06 Through 2011-02-11
</td>
</tr>
<tr>
<td>
2011-02-13 Through 2011-02-18
</td>
</tr>
<tr>
<td>
2011-02-20 Through 2011-02-25
</td>
</tr>
<tr>
<td>
2011-02-27 Through 2011-03-04
</td>
</tr>
<tr>
<td>
2011-03-06 Through 2011-03-11
</td>
</tr>
<tr>
<td>
2011-03-13 Through 2011-03-18
</td>
</tr>
</table>
<p>

7 rows selected.<br>
<br>


Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

SQL*Plus: Release 11.2.0.1.0 Production on Mon Mar 21 03:12:14 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

03:12:14 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
03:12:14 SQL> 03:12:14 SQL> --
03:12:14 SQL> -- fx_past.sql
03:12:14 SQL> --
03:12:14 SQL> 
03:12:14 SQL> -- I use this script to join 3 types of tables:
03:12:14 SQL> -- prices,gains
03:12:14 SQL> -- gatt-scores
03:12:14 SQL> -- gattn-scores
03:12:14 SQL> 
03:12:14 SQL> -- I can pattern off this script:
03:12:14 SQL> -- /pt/s/rluck/svm62/qrs2.sql
03:12:14 SQL> 
03:12:14 SQL> DROP TABLE fxpst10;

Table dropped.

Elapsed: 00:00:00.07
03:12:14 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.11
03:12:14 SQL> CREATE TABLE fxpst10 COMPRESS AS
03:12:14   2  SELECT
03:12:14   3  pair
03:12:14   4  ,ydate
03:12:14   5  ,clse
03:12:14   6  ,prdate
03:12:14   7  ,(LEAD(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g2
03:12:14   8  ,(LEAD(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g6
03:12:14   9  FROM di5min
03:12:14  10  WHERE ydate > sysdate - (7 * 7)
03:12:14  11  AND clse > 0
03:12:14  12  ORDER BY pair,ydate
03:12:14  13  /

Table created.

Elapsed: 00:00:01.22
03:12:15 SQL> 
03:12:15 SQL> ANALYZE TABLE fxpst10 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.19
03:12:15 SQL> 
03:12:15 SQL> DROP TABLE fxpst12;

Table dropped.

Elapsed: 00:00:00.08
03:12:16 SQL> CREATE TABLE fxpst12 COMPRESS AS
03:12:16   2  SELECT
03:12:16   3  m.pair
03:12:16   4  ,m.ydate
03:12:16   5  ,m.clse
03:12:16   6  ,ROUND(l.score-s.score,1) rscore_diff1
03:12:16   7  ,ROUND(l.score-s.score,2) rscore_diff2
03:12:16   8  ,m.g2
03:12:16   9  ,m.g6
03:12:16  10  ,m.g6-m.g2 g4
03:12:16  11  ,CORR(l.score-s.score,g6)OVER(PARTITION BY l.pair ORDER BY l.ydate ROWS BETWEEN 12*24*1 PRECEDING AND CURRENT ROW)rnng_crr1
03:12:16  12  FROM svm62scores l,svm62scores s,fxpst10 m
03:12:16  13  WHERE l.targ='gatt'
03:12:16  14  AND   s.targ='gattn'
03:12:16  15  AND l.prdate = s.prdate
03:12:16  16  AND l.prdate = m.prdate
03:12:16  17  -- Speed things up:
03:12:16  18  AND l.ydate > sysdate - (7 * 7)
03:12:16  19  AND s.ydate > sysdate - (7 * 7)
03:12:16  20  /

Table created.

Elapsed: 00:00:00.95
03:12:17 SQL> 
03:12:17 SQL> ANALYZE TABLE fxpst12 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.10
03:12:17 SQL> 
03:12:17 SQL> -- rpt
03:12:17 SQL> -- This SELECT gives me a list of recent week-names.
03:12:17 SQL> -- I use minday, maxday to help me understand the contents of each week.
03:12:17 SQL> SELECT
03:12:17   2  TO_CHAR(ydate,'WW')
03:12:17   3  ,MIN(ydate)
03:12:17   4  ,TO_CHAR(MIN(ydate),'Dy')minday
03:12:17   5  ,COUNT(ydate)
03:12:17   6  ,MAX(ydate)
03:12:17   7  ,TO_CHAR(MAX(ydate),'Dy')maxday
03:12:17   8  FROM fxpst12
03:12:17   9  GROUP BY
03:12:17  10  TO_CHAR(ydate,'WW')
03:12:17  11  ORDER BY
03:12:17  12  MIN(ydate)
03:12:17  13  /

TO MIN(YDATE)	       MIN COUNT(YDATE) MAX(YDATE)	    MAX
-- ------------------- --- ------------ ------------------- ---
05 2011-01-31 03:15:00 Mon	   7186 2011-02-04 21:55:00 Fri
06 2011-02-06 22:15:00 Sun	   5644 2011-02-11 21:55:00 Fri
07 2011-02-13 22:15:00 Sun	   4271 2011-02-18 21:55:00 Fri
08 2011-02-20 22:15:00 Sun	   3230 2011-02-25 21:55:00 Fri
09 2011-02-27 22:15:00 Sun	   3885 2011-03-04 21:55:00 Fri
10 2011-03-06 22:15:00 Sun	   1594 2011-03-11 21:55:00 Fri
11 2011-03-13 21:15:00 Sun	   8657 2011-03-18 20:45:00 Fri

7 rows selected.

Elapsed: 00:00:00.03
03:12:17 SQL> 
03:12:17 SQL> -- This SELECT gives me text for a-tags
03:12:17 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
03:12:17 SQL> SET TIME off TIMING off ECHO off
<p>
<table id='table_fx_past'>
<tr>
<th scope="col">
WWEEK
</th>
</tr>
<tr>
<td>
2011-01-31 Through 2011-02-04
</td>
</tr>
<tr>
<td>
2011-02-06 Through 2011-02-11
</td>
</tr>
<tr>
<td>
2011-02-13 Through 2011-02-18
</td>
</tr>
<tr>
<td>
2011-02-20 Through 2011-02-25
</td>
</tr>
<tr>
<td>
2011-02-27 Through 2011-03-04
</td>
</tr>
<tr>
<td>
2011-03-06 Through 2011-03-11
</td>
</tr>
<tr>
<td>
2011-03-13 Through 2011-03-18
</td>
</tr>
</table>
<p>

7 rows selected.<br>
<br>


Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

SQL*Plus: Release 11.2.0.1.0 Production on Mon Mar 21 03:20:13 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

03:20:13 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
03:20:13 SQL> 03:20:13 SQL> --
03:20:13 SQL> -- fx_past.sql
03:20:13 SQL> --
03:20:13 SQL> 
03:20:13 SQL> -- I use this script to join 3 types of tables:
03:20:13 SQL> -- prices,gains
03:20:13 SQL> -- gatt-scores
03:20:13 SQL> -- gattn-scores
03:20:13 SQL> 
03:20:13 SQL> -- I can pattern off this script:
03:20:13 SQL> -- /pt/s/rluck/svm62/qrs2.sql
03:20:13 SQL> 
03:20:13 SQL> DROP TABLE fxpst10;

Table dropped.

Elapsed: 00:00:00.23
03:20:13 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.18
03:20:13 SQL> CREATE TABLE fxpst10 COMPRESS AS
03:20:13   2  SELECT
03:20:13   3  pair
03:20:13   4  ,ydate
03:20:13   5  ,clse
03:20:13   6  ,prdate
03:20:13   7  ,(LEAD(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g2
03:20:13   8  ,(LEAD(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g6
03:20:13   9  FROM di5min
03:20:13  10  WHERE ydate > sysdate - (7 * 7)
03:20:13  11  AND clse > 0
03:20:13  12  ORDER BY pair,ydate
03:20:13  13  /

Table created.

Elapsed: 00:00:01.51
03:20:15 SQL> 
03:20:15 SQL> ANALYZE TABLE fxpst10 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.19
03:20:15 SQL> 
03:20:15 SQL> DROP TABLE fxpst12;

Table dropped.

Elapsed: 00:00:00.11
03:20:15 SQL> CREATE TABLE fxpst12 COMPRESS AS
03:20:15   2  SELECT
03:20:15   3  m.pair
03:20:15   4  ,m.ydate
03:20:15   5  ,m.clse
03:20:15   6  ,ROUND(l.score-s.score,1) rscore_diff1
03:20:15   7  ,ROUND(l.score-s.score,2) rscore_diff2
03:20:15   8  ,m.g2
03:20:15   9  ,m.g6
03:20:15  10  ,m.g6-m.g2 g4
03:20:15  11  ,CORR(l.score-s.score,g6)OVER(PARTITION BY l.pair ORDER BY l.ydate ROWS BETWEEN 12*24*1 PRECEDING AND CURRENT ROW)rnng_crr1
03:20:15  12  FROM svm62scores l,svm62scores s,fxpst10 m
03:20:15  13  WHERE l.targ='gatt'
03:20:15  14  AND   s.targ='gattn'
03:20:15  15  AND l.prdate = s.prdate
03:20:15  16  AND l.prdate = m.prdate
03:20:15  17  -- Speed things up:
03:20:15  18  AND l.ydate > sysdate - (7 * 7)
03:20:15  19  AND s.ydate > sysdate - (7 * 7)
03:20:15  20  /

Table created.

Elapsed: 00:00:01.02
03:20:16 SQL> 
03:20:16 SQL> ANALYZE TABLE fxpst12 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.07
03:20:16 SQL> 
03:20:16 SQL> -- rpt
03:20:16 SQL> -- This SELECT gives me a list of recent week-names.
03:20:16 SQL> -- I use minday, maxday to help me understand the contents of each week.
03:20:16 SQL> SELECT
03:20:16   2  TO_CHAR(ydate,'WW')
03:20:16   3  ,MIN(ydate)
03:20:16   4  ,TO_CHAR(MIN(ydate),'Dy')minday
03:20:16   5  ,COUNT(ydate)
03:20:16   6  ,MAX(ydate)
03:20:16   7  ,TO_CHAR(MAX(ydate),'Dy')maxday
03:20:16   8  FROM fxpst12
03:20:16   9  GROUP BY
03:20:16  10  TO_CHAR(ydate,'WW')
03:20:16  11  ORDER BY
03:20:16  12  MIN(ydate)
03:20:16  13  /

TO MIN(YDATE)	       MIN COUNT(YDATE) MAX(YDATE)	    MAX
-- ------------------- --- ------------ ------------------- ---
05 2011-01-31 03:25:00 Mon	   7164 2011-02-04 21:55:00 Fri
06 2011-02-06 22:15:00 Sun	   5644 2011-02-11 21:55:00 Fri
07 2011-02-13 22:15:00 Sun	   4271 2011-02-18 21:55:00 Fri
08 2011-02-20 22:15:00 Sun	   3230 2011-02-25 21:55:00 Fri
09 2011-02-27 22:15:00 Sun	   3885 2011-03-04 21:55:00 Fri
10 2011-03-06 22:15:00 Sun	   1594 2011-03-11 21:55:00 Fri
11 2011-03-13 21:15:00 Sun	   8688 2011-03-18 20:45:00 Fri

7 rows selected.

Elapsed: 00:00:00.03
03:20:16 SQL> 
03:20:16 SQL> -- This SELECT gives me text for a-tags
03:20:16 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
03:20:16 SQL> SET TIME off TIMING off ECHO off
<p>
<table id='table_fx_past'>
<tr>
<th scope="col">
WWEEK
</th>
</tr>
<tr>
<td>
Week: 2011-01-31 Through 2011-02-04
</td>
</tr>
<tr>
<td>
Week: 2011-02-06 Through 2011-02-11
</td>
</tr>
<tr>
<td>
Week: 2011-02-13 Through 2011-02-18
</td>
</tr>
<tr>
<td>
Week: 2011-02-20 Through 2011-02-25
</td>
</tr>
<tr>
<td>
Week: 2011-02-27 Through 2011-03-04
</td>
</tr>
<tr>
<td>
Week: 2011-03-06 Through 2011-03-11
</td>
</tr>
<tr>
<td>
Week: 2011-03-13 Through 2011-03-18
</td>
</tr>
</table>
<p>

7 rows selected.<br>
<br>


Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

SQL*Plus: Release 11.2.0.1.0 Production on Mon Mar 21 04:53:05 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

04:53:05 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
04:53:05 SQL> 04:53:05 SQL> --
04:53:05 SQL> -- fx_past.sql
04:53:05 SQL> --
04:53:05 SQL> 
04:53:05 SQL> -- I use this script to join 3 types of tables:
04:53:05 SQL> -- prices,gains
04:53:05 SQL> -- gatt-scores
04:53:05 SQL> -- gattn-scores
04:53:05 SQL> 
04:53:05 SQL> -- I can pattern off this script:
04:53:05 SQL> -- /pt/s/rluck/svm62/qrs2.sql
04:53:05 SQL> 
04:53:05 SQL> DROP TABLE fxpst10;

Table dropped.

Elapsed: 00:00:00.38
04:53:06 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.25
04:53:06 SQL> CREATE TABLE fxpst10 COMPRESS AS
04:53:06   2  SELECT
04:53:06   3  pair
04:53:06   4  ,ydate
04:53:06   5  ,clse
04:53:06   6  ,prdate
04:53:06   7  ,(LEAD(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g2
04:53:06   8  ,(LEAD(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g6
04:53:06   9  FROM di5min
04:53:06  10  WHERE ydate > sysdate - (7 * 7)
04:53:06  11  AND clse > 0
04:53:06  12  ORDER BY pair,ydate
04:53:06  13  /

Table created.

Elapsed: 00:00:01.50
04:53:07 SQL> 
04:53:07 SQL> ANALYZE TABLE fxpst10 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.27
04:53:08 SQL> 
04:53:08 SQL> DROP TABLE fxpst12;

Table dropped.

Elapsed: 00:00:00.09
04:53:08 SQL> CREATE TABLE fxpst12 COMPRESS AS
04:53:08   2  SELECT
04:53:08   3  m.pair
04:53:08   4  ,m.ydate
04:53:08   5  ,m.clse
04:53:08   6  ,ROUND(l.score-s.score,1) rscore_diff1
04:53:08   7  ,ROUND(l.score-s.score,2) rscore_diff2
04:53:08   8  ,m.g2
04:53:08   9  ,m.g6
04:53:08  10  ,m.g6-m.g2 g4
04:53:08  11  ,CORR(l.score-s.score,g6)OVER(PARTITION BY l.pair ORDER BY l.ydate ROWS BETWEEN 12*24*1 PRECEDING AND CURRENT ROW)rnng_crr1
04:53:08  12  FROM svm62scores l,svm62scores s,fxpst10 m
04:53:08  13  WHERE l.targ='gatt'
04:53:08  14  AND   s.targ='gattn'
04:53:08  15  AND l.prdate = s.prdate
04:53:08  16  AND l.prdate = m.prdate
04:53:08  17  -- Speed things up:
04:53:08  18  AND l.ydate > sysdate - (7 * 7)
04:53:08  19  AND s.ydate > sysdate - (7 * 7)
04:53:08  20  /

Table created.

Elapsed: 00:00:01.50
04:53:09 SQL> 
04:53:09 SQL> ANALYZE TABLE fxpst12 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.11
04:53:09 SQL> 
04:53:09 SQL> -- rpt
04:53:09 SQL> -- This SELECT gives me a list of recent week-names.
04:53:09 SQL> -- I use minday, maxday to help me understand the contents of each week.
04:53:09 SQL> SELECT
04:53:09   2  TO_CHAR(ydate,'WW')
04:53:09   3  ,MIN(ydate)
04:53:09   4  ,TO_CHAR(MIN(ydate),'Dy')minday
04:53:09   5  ,COUNT(ydate)
04:53:09   6  ,MAX(ydate)
04:53:09   7  ,TO_CHAR(MAX(ydate),'Dy')maxday
04:53:09   8  FROM fxpst12
04:53:09   9  GROUP BY
04:53:09  10  TO_CHAR(ydate,'WW')
04:53:09  11  ORDER BY
04:53:09  12  MIN(ydate)
04:53:09  13  /

TO MIN(YDATE)	       MIN COUNT(YDATE) MAX(YDATE)	    MAX
-- ------------------- --- ------------ ------------------- ---
05 2011-01-31 04:55:00 Mon	   6966 2011-02-04 21:55:00 Fri
06 2011-02-06 22:15:00 Sun	   5644 2011-02-11 21:55:00 Fri
07 2011-02-13 22:15:00 Sun	   4271 2011-02-18 21:55:00 Fri
08 2011-02-20 22:15:00 Sun	   3230 2011-02-25 21:55:00 Fri
09 2011-02-27 22:15:00 Sun	   3885 2011-03-04 21:55:00 Fri
10 2011-03-06 22:15:00 Sun	   1594 2011-03-11 21:55:00 Fri
11 2011-03-13 21:15:00 Sun	   9034 2011-03-18 20:45:00 Fri

7 rows selected.

Elapsed: 00:00:00.02
04:53:09 SQL> 
04:53:09 SQL> -- This SELECT gives me text for a-tags
04:53:09 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
04:53:09 SQL> SET TIME off TIMING off ECHO off
<p>
<table id='table_fx_past'>
<tr>
<th scope="col">
WWEEK
</th>
</tr>
<tr>
<td>
Week: 2011-01-31 Through 2011-02-04
</td>
</tr>
<tr>
<td>
Week: 2011-02-06 Through 2011-02-11
</td>
</tr>
<tr>
<td>
Week: 2011-02-13 Through 2011-02-18
</td>
</tr>
<tr>
<td>
Week: 2011-02-20 Through 2011-02-25
</td>
</tr>
<tr>
<td>
Week: 2011-02-27 Through 2011-03-04
</td>
</tr>
<tr>
<td>
Week: 2011-03-06 Through 2011-03-11
</td>
</tr>
<tr>
<td>
Week: 2011-03-13 Through 2011-03-18
</td>
</tr>
</table>
<p>

7 rows selected.<br>
<br>


Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

SQL*Plus: Release 11.2.0.1.0 Production on Mon Mar 21 04:54:20 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

04:54:21 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
04:54:21 SQL> 04:54:21 SQL> --
04:54:21 SQL> -- fx_past.sql
04:54:21 SQL> --
04:54:21 SQL> 
04:54:21 SQL> -- I use this script to join 3 types of tables:
04:54:21 SQL> -- prices,gains
04:54:21 SQL> -- gatt-scores
04:54:21 SQL> -- gattn-scores
04:54:21 SQL> 
04:54:21 SQL> -- I can pattern off this script:
04:54:21 SQL> -- /pt/s/rluck/svm62/qrs2.sql
04:54:21 SQL> 
04:54:21 SQL> DROP TABLE fxpst10;

Table dropped.

Elapsed: 00:00:00.23
04:54:21 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.18
04:54:21 SQL> CREATE TABLE fxpst10 COMPRESS AS
04:54:21   2  SELECT
04:54:21   3  pair
04:54:21   4  ,ydate
04:54:21   5  ,clse
04:54:21   6  ,prdate
04:54:21   7  ,(LEAD(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g2
04:54:21   8  ,(LEAD(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g6
04:54:21   9  FROM di5min
04:54:21  10  WHERE ydate > sysdate - (7 * 7)
04:54:21  11  AND clse > 0
04:54:21  12  ORDER BY pair,ydate
04:54:21  13  /

Table created.

Elapsed: 00:00:01.19
04:54:22 SQL> 
04:54:22 SQL> ANALYZE TABLE fxpst10 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.22
04:54:22 SQL> 
04:54:22 SQL> DROP TABLE fxpst12;

Table dropped.

Elapsed: 00:00:00.30
04:54:23 SQL> CREATE TABLE fxpst12 COMPRESS AS
04:54:23   2  SELECT
04:54:23   3  m.pair
04:54:23   4  ,m.ydate
04:54:23   5  ,m.clse
04:54:23   6  ,ROUND(l.score-s.score,1) rscore_diff1
04:54:23   7  ,ROUND(l.score-s.score,2) rscore_diff2
04:54:23   8  ,m.g2
04:54:23   9  ,m.g6
04:54:23  10  ,m.g6-m.g2 g4
04:54:23  11  ,CORR(l.score-s.score,g6)OVER(PARTITION BY l.pair ORDER BY l.ydate ROWS BETWEEN 12*24*1 PRECEDING AND CURRENT ROW)rnng_crr1
04:54:23  12  FROM svm62scores l,svm62scores s,fxpst10 m
04:54:23  13  WHERE l.targ='gatt'
04:54:23  14  AND   s.targ='gattn'
04:54:23  15  AND l.prdate = s.prdate
04:54:23  16  AND l.prdate = m.prdate
04:54:23  17  -- Speed things up:
04:54:23  18  AND l.ydate > sysdate - (7 * 7)
04:54:23  19  AND s.ydate > sysdate - (7 * 7)
04:54:23  20  /

Table created.

Elapsed: 00:00:01.03
04:54:24 SQL> 
04:54:24 SQL> ANALYZE TABLE fxpst12 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.09
04:54:24 SQL> 
04:54:24 SQL> -- rpt
04:54:24 SQL> -- This SELECT gives me a list of recent week-names.
04:54:24 SQL> -- I use minday, maxday to help me understand the contents of each week.
04:54:24 SQL> SELECT
04:54:24   2  TO_CHAR(ydate,'WW')
04:54:24   3  ,MIN(ydate)
04:54:24   4  ,TO_CHAR(MIN(ydate),'Dy')minday
04:54:24   5  ,COUNT(ydate)
04:54:24   6  ,MAX(ydate)
04:54:24   7  ,TO_CHAR(MAX(ydate),'Dy')maxday
04:54:24   8  FROM fxpst12
04:54:24   9  GROUP BY
04:54:24  10  TO_CHAR(ydate,'WW')
04:54:24  11  ORDER BY
04:54:24  12  MIN(ydate)
04:54:24  13  /

TO MIN(YDATE)	       MIN COUNT(YDATE) MAX(YDATE)	    MAX
-- ------------------- --- ------------ ------------------- ---
05 2011-01-31 04:55:00 Mon	   6966 2011-02-04 21:55:00 Fri
06 2011-02-06 22:15:00 Sun	   5644 2011-02-11 21:55:00 Fri
07 2011-02-13 22:15:00 Sun	   4271 2011-02-18 21:55:00 Fri
08 2011-02-20 22:15:00 Sun	   3230 2011-02-25 21:55:00 Fri
09 2011-02-27 22:15:00 Sun	   3885 2011-03-04 21:55:00 Fri
10 2011-03-06 22:15:00 Sun	   1594 2011-03-11 21:55:00 Fri
11 2011-03-13 21:15:00 Sun	   9039 2011-03-18 20:45:00 Fri

7 rows selected.

Elapsed: 00:00:00.03
04:54:24 SQL> 
04:54:24 SQL> -- This SELECT gives me text for a-tags
04:54:24 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
04:54:24 SQL> SET TIME off TIMING off ECHO off
<p>
<table id='table_fx_past'>
<tr>
<th scope="col">
WWEEK
</th>
</tr>
<tr>
<td>
Week: 2011-01-31 Through 2011-02-04
</td>
</tr>
<tr>
<td>
Week: 2011-02-06 Through 2011-02-11
</td>
</tr>
<tr>
<td>
Week: 2011-02-13 Through 2011-02-18
</td>
</tr>
<tr>
<td>
Week: 2011-02-20 Through 2011-02-25
</td>
</tr>
<tr>
<td>
Week: 2011-02-27 Through 2011-03-04
</td>
</tr>
<tr>
<td>
Week: 2011-03-06 Through 2011-03-11
</td>
</tr>
<tr>
<td>
Week: 2011-03-13 Through 2011-03-18
</td>
</tr>
</table>
<p>

7 rows selected.<br>
<br>


Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

SQL*Plus: Release 11.2.0.1.0 Production on Mon Mar 21 06:53:26 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

06:53:26 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
06:53:26 SQL> 06:53:26 SQL> --
06:53:26 SQL> -- fx_past.sql
06:53:26 SQL> --
06:53:26 SQL> 
06:53:26 SQL> -- I use this script to join 3 types of tables:
06:53:26 SQL> -- prices,gains
06:53:26 SQL> -- gatt-scores
06:53:26 SQL> -- gattn-scores
06:53:26 SQL> 
06:53:26 SQL> -- I can pattern off this script:
06:53:26 SQL> -- /pt/s/rluck/svm62/qrs2.sql
06:53:26 SQL> 
06:53:26 SQL> DROP TABLE fxpst10;

Table dropped.

Elapsed: 00:00:00.50
06:53:27 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.45
06:53:27 SQL> CREATE TABLE fxpst10 COMPRESS AS
06:53:27   2  SELECT
06:53:27   3  pair
06:53:27   4  ,ydate
06:53:27   5  ,clse
06:53:27   6  ,prdate
06:53:27   7  ,(LEAD(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g2
06:53:27   8  ,(LEAD(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g6
06:53:27   9  FROM di5min
06:53:27  10  WHERE ydate > '2011-01-31'
06:53:27  11  AND clse > 0
06:53:27  12  ORDER BY pair,ydate
06:53:27  13  /

Table created.

Elapsed: 00:00:01.26
06:53:28 SQL> 
06:53:28 SQL> ANALYZE TABLE fxpst10 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.16
06:53:28 SQL> 
06:53:28 SQL> DROP TABLE fxpst12;

Table dropped.

Elapsed: 00:00:00.50
06:53:29 SQL> CREATE TABLE fxpst12 COMPRESS AS
06:53:29   2  SELECT
06:53:29   3  m.pair
06:53:29   4  ,m.ydate
06:53:29   5  ,m.clse
06:53:29   6  ,ROUND(l.score-s.score,1) rscore_diff1
06:53:29   7  ,ROUND(l.score-s.score,2) rscore_diff2
06:53:29   8  ,m.g2
06:53:29   9  ,m.g6
06:53:29  10  ,m.g6-m.g2 g4
06:53:29  11  ,CORR(l.score-s.score,g6)OVER(PARTITION BY l.pair ORDER BY l.ydate ROWS BETWEEN 12*24*1 PRECEDING AND CURRENT ROW)rnng_crr1
06:53:29  12  FROM svm62scores l,svm62scores s,fxpst10 m
06:53:29  13  WHERE l.targ='gatt'
06:53:29  14  AND   s.targ='gattn'
06:53:29  15  AND l.prdate = s.prdate
06:53:29  16  AND l.prdate = m.prdate
06:53:29  17  -- Speed things up:
06:53:29  18  AND l.ydate > '2011-01-31'
06:53:29  19  AND s.ydate > '2011-01-31'
06:53:29  20  /

Table created.

Elapsed: 00:00:00.99
06:53:30 SQL> 
06:53:30 SQL> ANALYZE TABLE fxpst12 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.11
06:53:30 SQL> 
06:53:30 SQL> -- rpt
06:53:30 SQL> -- This SELECT gives me a list of recent week-names.
06:53:30 SQL> -- I use minday, maxday to help me understand the contents of each week.
06:53:30 SQL> SELECT
06:53:30   2  TO_CHAR(ydate,'WW')
06:53:30   3  ,MIN(ydate)
06:53:30   4  ,TO_CHAR(MIN(ydate),'Dy')minday
06:53:30   5  ,COUNT(ydate)
06:53:30   6  ,MAX(ydate)
06:53:30   7  ,TO_CHAR(MAX(ydate),'Dy')maxday
06:53:30   8  FROM fxpst12
06:53:30   9  GROUP BY
06:53:30  10  TO_CHAR(ydate,'WW')
06:53:30  11  ORDER BY
06:53:30  12  MIN(ydate)
06:53:30  13  /

TO MIN(YDATE)	       MIN COUNT(YDATE) MAX(YDATE)	    MAX
-- ------------------- --- ------------ ------------------- ---
05 2011-01-31 00:05:00 Mon	   7604 2011-02-04 21:55:00 Fri
06 2011-02-06 22:15:00 Sun	   5690 2011-02-11 21:55:00 Fri
07 2011-02-13 22:15:00 Sun	   4729 2011-02-18 21:55:00 Fri
08 2011-02-20 22:15:00 Sun	   3485 2011-02-25 21:55:00 Fri
09 2011-02-27 22:15:00 Sun	   3964 2011-03-04 21:55:00 Fri
10 2011-03-06 22:15:00 Sun	   4271 2011-03-11 21:55:00 Fri
11 2011-03-13 21:15:00 Sun	   9814 2011-03-18 20:45:00 Fri

7 rows selected.

Elapsed: 00:00:00.03
06:53:30 SQL> 
06:53:30 SQL> -- This SELECT gives me text for a-tags
06:53:30 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
06:53:30 SQL> SET TIME off TIMING off ECHO off
<p>
<table id='table_fx_past'>
<tr>
<th scope="col">
WWEEK
</th>
</tr>
<tr>
<td>
Week: 2011-01-31 Through 2011-02-04
</td>
</tr>
<tr>
<td>
Week: 2011-02-06 Through 2011-02-11
</td>
</tr>
<tr>
<td>
Week: 2011-02-13 Through 2011-02-18
</td>
</tr>
<tr>
<td>
Week: 2011-02-20 Through 2011-02-25
</td>
</tr>
<tr>
<td>
Week: 2011-02-27 Through 2011-03-04
</td>
</tr>
<tr>
<td>
Week: 2011-03-06 Through 2011-03-11
</td>
</tr>
<tr>
<td>
Week: 2011-03-13 Through 2011-03-18
</td>
</tr>
</table>
<p>

7 rows selected.<br>
<br>


Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

SQL*Plus: Release 11.2.0.1.0 Production on Mon Mar 21 07:00:29 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

07:00:29 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
07:00:29 SQL> 07:00:29 SQL> --
07:00:29 SQL> -- fx_past.sql
07:00:29 SQL> --
07:00:29 SQL> 
07:00:29 SQL> -- I use this script to join 3 types of tables:
07:00:29 SQL> -- prices,gains
07:00:29 SQL> -- gatt-scores
07:00:29 SQL> -- gattn-scores
07:00:29 SQL> 
07:00:29 SQL> -- I can pattern off this script:
07:00:29 SQL> -- /pt/s/rluck/svm62/qrs2.sql
07:00:29 SQL> 
07:00:29 SQL> DROP TABLE fxpst10;

Table dropped.

Elapsed: 00:00:00.20
07:00:29 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.34
07:00:29 SQL> CREATE TABLE fxpst10 COMPRESS AS
07:00:29   2  SELECT
07:00:29   3  pair
07:00:29   4  ,ydate
07:00:29   5  ,clse
07:00:29   6  ,prdate
07:00:29   7  ,(LEAD(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g2
07:00:29   8  ,(LEAD(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g6
07:00:29   9  FROM di5min
07:00:29  10  WHERE ydate > '2011-01-31'
07:00:29  11  AND clse > 0
07:00:29  12  ORDER BY pair,ydate
07:00:29  13  /

Table created.

Elapsed: 00:00:01.41
07:00:31 SQL> 
07:00:31 SQL> ANALYZE TABLE fxpst10 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.21
07:00:31 SQL> 
07:00:31 SQL> DROP TABLE fxpst12;

Table dropped.

Elapsed: 00:00:00.07
07:00:31 SQL> CREATE TABLE fxpst12 COMPRESS AS
07:00:31   2  SELECT
07:00:31   3  m.pair
07:00:31   4  ,m.ydate
07:00:31   5  ,m.clse
07:00:31   6  ,ROUND(l.score-s.score,1) rscore_diff1
07:00:31   7  ,ROUND(l.score-s.score,2) rscore_diff2
07:00:31   8  ,m.g2
07:00:31   9  ,m.g6
07:00:31  10  ,m.g6-m.g2 g4
07:00:31  11  ,CORR(l.score-s.score,g6)OVER(PARTITION BY l.pair ORDER BY l.ydate ROWS BETWEEN 12*24*1 PRECEDING AND CURRENT ROW)rnng_crr1
07:00:31  12  FROM svm62scores l,svm62scores s,fxpst10 m
07:00:31  13  WHERE l.targ='gatt'
07:00:31  14  AND   s.targ='gattn'
07:00:31  15  AND l.prdate = s.prdate
07:00:31  16  AND l.prdate = m.prdate
07:00:31  17  -- Speed things up:
07:00:31  18  AND l.ydate > '2011-01-31'
07:00:31  19  AND s.ydate > '2011-01-31'
07:00:31  20  /

Table created.

Elapsed: 00:00:01.09
07:00:32 SQL> 
07:00:32 SQL> ANALYZE TABLE fxpst12 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.20
07:00:32 SQL> 
07:00:32 SQL> -- rpt
07:00:32 SQL> -- This SELECT gives me a list of recent week-names.
07:00:32 SQL> -- I use minday, maxday to help me understand the contents of each week.
07:00:32 SQL> SELECT
07:00:32   2  TO_CHAR(ydate,'WW')
07:00:32   3  ,MIN(ydate)
07:00:32   4  ,TO_CHAR(MIN(ydate),'Dy')minday
07:00:32   5  ,COUNT(ydate)
07:00:32   6  ,MAX(ydate)
07:00:32   7  ,TO_CHAR(MAX(ydate),'Dy')maxday
07:00:32   8  FROM fxpst12
07:00:32   9  GROUP BY
07:00:32  10  TO_CHAR(ydate,'WW')
07:00:32  11  ORDER BY
07:00:32  12  MIN(ydate)
07:00:32  13  /

TO MIN(YDATE)	       MIN COUNT(YDATE) MAX(YDATE)	    MAX
-- ------------------- --- ------------ ------------------- ---
05 2011-01-31 00:05:00 Mon	   7604 2011-02-04 21:55:00 Fri
06 2011-02-06 22:15:00 Sun	   5690 2011-02-11 21:55:00 Fri
07 2011-02-13 22:15:00 Sun	   4729 2011-02-18 21:55:00 Fri
08 2011-02-20 22:15:00 Sun	   3485 2011-02-25 21:55:00 Fri
09 2011-02-27 22:15:00 Sun	   3964 2011-03-04 21:55:00 Fri
10 2011-03-06 22:15:00 Sun	   4271 2011-03-11 21:55:00 Fri
11 2011-03-13 21:15:00 Sun	   9840 2011-03-18 20:45:00 Fri

7 rows selected.

Elapsed: 00:00:00.04
07:00:33 SQL> 
07:00:33 SQL> -- This SELECT gives me text for a-tags
07:00:33 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
07:00:33 SQL> SET TIME off TIMING off ECHO off
<p>
<table id='table_fx_past'>
<tr>
<th scope="col">
WWEEK
</th>
</tr>
<tr>
<td>
Week: 2011-01-31 Through 2011-02-04
</td>
</tr>
<tr>
<td>
Week: 2011-02-06 Through 2011-02-11
</td>
</tr>
<tr>
<td>
Week: 2011-02-13 Through 2011-02-18
</td>
</tr>
<tr>
<td>
Week: 2011-02-20 Through 2011-02-25
</td>
</tr>
<tr>
<td>
Week: 2011-02-27 Through 2011-03-04
</td>
</tr>
<tr>
<td>
Week: 2011-03-06 Through 2011-03-11
</td>
</tr>
<tr>
<td>
Week: 2011-03-13 Through 2011-03-18
</td>
</tr>
</table>
<p>

7 rows selected.<br>
<br>



'@FX_PAST_WEEK.SQL'||MIN(YDA
----------------------------
@fx_past_week.sql 2011-01-31
@fx_past_week.sql 2011-02-06
@fx_past_week.sql 2011-02-13
@fx_past_week.sql 2011-02-20
@fx_past_week.sql 2011-02-27
@fx_past_week.sql 2011-03-06
@fx_past_week.sql 2011-03-13

7 rows selected.

Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

SQL*Plus: Release 11.2.0.1.0 Production on Mon Mar 21 07:03:31 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

07:03:31 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
07:03:31 SQL> 07:03:31 SQL> --
07:03:31 SQL> -- fx_past.sql
07:03:31 SQL> --
07:03:31 SQL> 
07:03:31 SQL> -- I use this script to join 3 types of tables:
07:03:31 SQL> -- prices,gains
07:03:31 SQL> -- gatt-scores
07:03:31 SQL> -- gattn-scores
07:03:31 SQL> 
07:03:31 SQL> -- I can pattern off this script:
07:03:31 SQL> -- /pt/s/rluck/svm62/qrs2.sql
07:03:31 SQL> 
07:03:31 SQL> DROP TABLE fxpst10;

Table dropped.

Elapsed: 00:00:00.32
07:03:31 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.30
07:03:31 SQL> CREATE TABLE fxpst10 COMPRESS AS
07:03:31   2  SELECT
07:03:31   3  pair
07:03:31   4  ,ydate
07:03:31   5  ,clse
07:03:31   6  ,prdate
07:03:31   7  ,(LEAD(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g2
07:03:31   8  ,(LEAD(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g6
07:03:31   9  FROM di5min
07:03:31  10  WHERE ydate > '2011-01-31'
07:03:31  11  AND clse > 0
07:03:31  12  ORDER BY pair,ydate
07:03:31  13  /

Table created.

Elapsed: 00:00:01.20
07:03:33 SQL> 
07:03:33 SQL> ANALYZE TABLE fxpst10 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.18
07:03:33 SQL> 
07:03:33 SQL> DROP TABLE fxpst12;

Table dropped.

Elapsed: 00:00:00.54
07:03:33 SQL> CREATE TABLE fxpst12 COMPRESS AS
07:03:33   2  SELECT
07:03:33   3  m.pair
07:03:33   4  ,m.ydate
07:03:33   5  ,m.clse
07:03:33   6  ,ROUND(l.score-s.score,1) rscore_diff1
07:03:33   7  ,ROUND(l.score-s.score,2) rscore_diff2
07:03:33   8  ,m.g2
07:03:33   9  ,m.g6
07:03:33  10  ,m.g6-m.g2 g4
07:03:33  11  ,CORR(l.score-s.score,g6)OVER(PARTITION BY l.pair ORDER BY l.ydate ROWS BETWEEN 12*24*1 PRECEDING AND CURRENT ROW)rnng_crr1
07:03:33  12  FROM svm62scores l,svm62scores s,fxpst10 m
07:03:33  13  WHERE l.targ='gatt'
07:03:33  14  AND   s.targ='gattn'
07:03:33  15  AND l.prdate = s.prdate
07:03:33  16  AND l.prdate = m.prdate
07:03:33  17  -- Speed things up:
07:03:33  18  AND l.ydate > '2011-01-31'
07:03:33  19  AND s.ydate > '2011-01-31'
07:03:33  20  /

Table created.

Elapsed: 00:00:01.13
07:03:35 SQL> 
07:03:35 SQL> ANALYZE TABLE fxpst12 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.19
07:03:35 SQL> 
07:03:35 SQL> -- rpt
07:03:35 SQL> -- This SELECT gives me a list of recent week-names.
07:03:35 SQL> -- I use minday, maxday to help me understand the contents of each week.
07:03:35 SQL> SELECT
07:03:35   2  TO_CHAR(ydate,'WW')
07:03:35   3  ,MIN(ydate)
07:03:35   4  ,TO_CHAR(MIN(ydate),'Dy')minday
07:03:35   5  ,COUNT(ydate)
07:03:35   6  ,MAX(ydate)
07:03:35   7  ,TO_CHAR(MAX(ydate),'Dy')maxday
07:03:35   8  FROM fxpst12
07:03:35   9  GROUP BY
07:03:35  10  TO_CHAR(ydate,'WW')
07:03:35  11  ORDER BY
07:03:35  12  MIN(ydate)
07:03:35  13  /

TO MIN(YDATE)	       MIN COUNT(YDATE) MAX(YDATE)	    MAX
-- ------------------- --- ------------ ------------------- ---
05 2011-01-31 00:05:00 Mon	   7604 2011-02-04 21:55:00 Fri
06 2011-02-06 22:15:00 Sun	   5690 2011-02-11 21:55:00 Fri
07 2011-02-13 22:15:00 Sun	   4729 2011-02-18 21:55:00 Fri
08 2011-02-20 22:15:00 Sun	   3485 2011-02-25 21:55:00 Fri
09 2011-02-27 22:15:00 Sun	   3964 2011-03-04 21:55:00 Fri
10 2011-03-06 22:15:00 Sun	   4271 2011-03-11 21:55:00 Fri
11 2011-03-13 21:15:00 Sun	   9852 2011-03-18 20:45:00 Fri

7 rows selected.

Elapsed: 00:00:00.04
07:03:35 SQL> 
07:03:35 SQL> -- This SELECT gives me text for a-tags
07:03:35 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
07:03:35 SQL> SET TIME off TIMING off ECHO off HEADING off
<p>
<table id='table_fx_past'>
<tr>
<td>
Week: 2011-01-31 Through 2011-02-04
</td>
</tr>
<tr>
<td>
Week: 2011-02-06 Through 2011-02-11
</td>
</tr>
<tr>
<td>
Week: 2011-02-13 Through 2011-02-18
</td>
</tr>
<tr>
<td>
Week: 2011-02-20 Through 2011-02-25
</td>
</tr>
<tr>
<td>
Week: 2011-02-27 Through 2011-03-04
</td>
</tr>
<tr>
<td>
Week: 2011-03-06 Through 2011-03-11
</td>
</tr>
<tr>
<td>
Week: 2011-03-13 Through 2011-03-18
</td>
</tr>
</table>
<p>

7 rows selected.<br>
<br>



@fx_past_week.sql 2011-01-31
@fx_past_week.sql 2011-02-06
@fx_past_week.sql 2011-02-13
@fx_past_week.sql 2011-02-20
@fx_past_week.sql 2011-02-27
@fx_past_week.sql 2011-03-06
@fx_past_week.sql 2011-03-13

7 rows selected.

Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

SQL*Plus: Release 11.2.0.1.0 Production on Mon Mar 21 07:07:34 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

07:07:34 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
07:07:34 SQL> 07:07:34 SQL> --
07:07:34 SQL> -- fx_past.sql
07:07:34 SQL> --
07:07:34 SQL> 
07:07:34 SQL> -- I use this script to join 3 types of tables:
07:07:34 SQL> -- prices,gains
07:07:34 SQL> -- gatt-scores
07:07:34 SQL> -- gattn-scores
07:07:34 SQL> 
07:07:34 SQL> -- I can pattern off this script:
07:07:34 SQL> -- /pt/s/rluck/svm62/qrs2.sql
07:07:34 SQL> 
07:07:34 SQL> DROP TABLE fxpst10;

Table dropped.

Elapsed: 00:00:00.30
07:07:34 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.29
07:07:34 SQL> CREATE TABLE fxpst10 COMPRESS AS
07:07:34   2  SELECT
07:07:34   3  pair
07:07:34   4  ,ydate
07:07:34   5  ,clse
07:07:34   6  ,prdate
07:07:34   7  ,(LEAD(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g2
07:07:34   8  ,(LEAD(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g6
07:07:34   9  FROM di5min
07:07:34  10  WHERE ydate > '2011-01-31'
07:07:34  11  AND clse > 0
07:07:34  12  ORDER BY pair,ydate
07:07:34  13  /

Table created.

Elapsed: 00:00:01.60
07:07:36 SQL> 
07:07:36 SQL> ANALYZE TABLE fxpst10 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.29
07:07:36 SQL> 
07:07:36 SQL> DROP TABLE fxpst12;

Table dropped.

Elapsed: 00:00:00.77
07:07:37 SQL> CREATE TABLE fxpst12 COMPRESS AS
07:07:37   2  SELECT
07:07:37   3  m.pair
07:07:37   4  ,m.ydate
07:07:37   5  ,m.clse
07:07:37   6  ,ROUND(l.score-s.score,1) rscore_diff1
07:07:37   7  ,ROUND(l.score-s.score,2) rscore_diff2
07:07:37   8  ,m.g2
07:07:37   9  ,m.g6
07:07:37  10  ,m.g6-m.g2 g4
07:07:37  11  ,CORR(l.score-s.score,g6)OVER(PARTITION BY l.pair ORDER BY l.ydate ROWS BETWEEN 12*24*1 PRECEDING AND CURRENT ROW)rnng_crr1
07:07:37  12  FROM svm62scores l,svm62scores s,fxpst10 m
07:07:37  13  WHERE l.targ='gatt'
07:07:37  14  AND   s.targ='gattn'
07:07:37  15  AND l.prdate = s.prdate
07:07:37  16  AND l.prdate = m.prdate
07:07:37  17  -- Speed things up:
07:07:37  18  AND l.ydate > '2011-01-31'
07:07:37  19  AND s.ydate > '2011-01-31'
07:07:37  20  /

Table created.

Elapsed: 00:00:00.99
07:07:38 SQL> 
07:07:38 SQL> ANALYZE TABLE fxpst12 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.08
07:07:38 SQL> 
07:07:38 SQL> -- rpt
07:07:38 SQL> -- This SELECT gives me a list of recent week-names.
07:07:38 SQL> -- I use minday, maxday to help me understand the contents of each week.
07:07:38 SQL> SELECT
07:07:38   2  TO_CHAR(ydate,'WW')
07:07:38   3  ,MIN(ydate)
07:07:38   4  ,TO_CHAR(MIN(ydate),'Dy')minday
07:07:38   5  ,COUNT(ydate)
07:07:38   6  ,MAX(ydate)
07:07:38   7  ,TO_CHAR(MAX(ydate),'Dy')maxday
07:07:38   8  FROM fxpst12
07:07:38   9  GROUP BY
07:07:38  10  TO_CHAR(ydate,'WW')
07:07:38  11  ORDER BY
07:07:38  12  MIN(ydate)
07:07:38  13  /

TO MIN(YDATE)	       MIN COUNT(YDATE) MAX(YDATE)	    MAX
-- ------------------- --- ------------ ------------------- ---
05 2011-01-31 00:05:00 Mon	   7604 2011-02-04 21:55:00 Fri
06 2011-02-06 22:15:00 Sun	   5690 2011-02-11 21:55:00 Fri
07 2011-02-13 22:15:00 Sun	   4729 2011-02-18 21:55:00 Fri
08 2011-02-20 22:15:00 Sun	   3485 2011-02-25 21:55:00 Fri
09 2011-02-27 22:15:00 Sun	   3964 2011-03-04 21:55:00 Fri
10 2011-03-06 22:15:00 Sun	   4271 2011-03-11 21:55:00 Fri
11 2011-03-13 21:15:00 Sun	   9867 2011-03-18 20:45:00 Fri

7 rows selected.

Elapsed: 00:00:00.04
07:07:38 SQL> 
07:07:38 SQL> -- This SELECT gives me text for a-tags
07:07:38 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
07:07:38 SQL> SET TIME off TIMING off ECHO off HEADING off
<p>
<table id='table_fx_past'>
<tr>
<td>
Week: 2011-01-31 Through 2011-02-04
</td>
</tr>
<tr>
<td>
Week: 2011-02-06 Through 2011-02-11
</td>
</tr>
<tr>
<td>
Week: 2011-02-13 Through 2011-02-18
</td>
</tr>
<tr>
<td>
Week: 2011-02-20 Through 2011-02-25
</td>
</tr>
<tr>
<td>
Week: 2011-02-27 Through 2011-03-04
</td>
</tr>
<tr>
<td>
Week: 2011-03-06 Through 2011-03-11
</td>
</tr>
<tr>
<td>
Week: 2011-03-13 Through 2011-03-18
</td>
</tr>
</table>
<p>

7 rows selected.<br>
<br>



@fx_past_week.sql 2011-01-31
@fx_past_week.sql 2011-02-06
@fx_past_week.sql 2011-02-13
@fx_past_week.sql 2011-02-20
@fx_past_week.sql 2011-02-27
@fx_past_week.sql 2011-03-06
@fx_past_week.sql 2011-03-13

7 rows selected.

Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

SQL*Plus: Release 11.2.0.1.0 Production on Mon Mar 21 07:39:41 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

07:39:41 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
07:39:41 SQL> 07:39:41 SQL> --
07:39:41 SQL> -- fx_past.sql
07:39:41 SQL> --
07:39:41 SQL> 
07:39:41 SQL> -- I use this script to join 3 types of tables:
07:39:41 SQL> -- prices,gains
07:39:41 SQL> -- gatt-scores
07:39:41 SQL> -- gattn-scores
07:39:41 SQL> 
07:39:41 SQL> -- I can pattern off this script:
07:39:41 SQL> -- /pt/s/rluck/svm62/qrs2.sql
07:39:41 SQL> 
07:39:41 SQL> DROP TABLE fxpst10;

Table dropped.

Elapsed: 00:00:00.54
07:39:42 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.43
07:39:42 SQL> CREATE TABLE fxpst10 COMPRESS AS
07:39:42   2  SELECT
07:39:42   3  pair
07:39:42   4  ,ydate
07:39:42   5  ,clse
07:39:42   6  ,prdate
07:39:42   7  ,(LEAD(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g2
07:39:42   8  ,(LEAD(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g6
07:39:42   9  FROM di5min
07:39:42  10  WHERE ydate > '2011-01-30'
07:39:42  11  AND clse > 0
07:39:42  12  ORDER BY pair,ydate
07:39:42  13  /

Table created.

Elapsed: 00:00:01.48
07:39:44 SQL> 
07:39:44 SQL> ANALYZE TABLE fxpst10 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.18
07:39:44 SQL> 
07:39:44 SQL> DROP TABLE fxpst12;

Table dropped.

Elapsed: 00:00:00.13
07:39:44 SQL> CREATE TABLE fxpst12 COMPRESS AS
07:39:44   2  SELECT
07:39:44   3  m.pair
07:39:44   4  ,m.ydate
07:39:44   5  ,m.clse
07:39:44   6  ,(l.score-s.score,1)	 score_diff
07:39:44   7  ,ROUND(l.score-s.score,1) rscore_diff1
07:39:44   8  ,ROUND(l.score-s.score,2) rscore_diff2
07:39:44   9  ,m.g2
07:39:44  10  ,m.g6
07:39:44  11  ,m.g6-m.g2 g4
07:39:44  12  ,CORR(l.score-s.score,g6)OVER(PARTITION BY l.pair ORDER BY l.ydate ROWS BETWEEN 12*24*1 PRECEDING AND CURRENT ROW)rnng_crr1
07:39:44  13  FROM svm62scores l,svm62scores s,fxpst10 m
07:39:44  14  WHERE l.targ='gatt'
07:39:44  15  AND   s.targ='gattn'
07:39:44  16  AND l.prdate = s.prdate
07:39:44  17  AND l.prdate = m.prdate
07:39:44  18  -- Speed things up:
07:39:44  19  AND l.ydate > '2011-01-30'
07:39:44  20  AND s.ydate > '2011-01-30'
07:39:44  21  /
,(l.score-s.score,1)	   score_diff
                 *
ERROR at line 6:
ORA-00907: missing right parenthesis


Elapsed: 00:00:00.00
07:39:44 SQL> 
07:39:44 SQL> ANALYZE TABLE fxpst12 ESTIMATE STATISTICS SAMPLE 9 PERCENT;
ANALYZE TABLE fxpst12 ESTIMATE STATISTICS SAMPLE 9 PERCENT
              *
ERROR at line 1:
ORA-00942: table or view does not exist


Elapsed: 00:00:00.01
07:39:44 SQL> 
07:39:44 SQL> -- rpt
07:39:44 SQL> -- This SELECT gives me a list of recent week-names.
07:39:44 SQL> -- I use minday, maxday to help me understand the contents of each week.
07:39:44 SQL> SELECT
07:39:44   2  TO_CHAR(ydate,'WW')
07:39:44   3  ,MIN(ydate)
07:39:44   4  ,TO_CHAR(MIN(ydate),'Dy')minday
07:39:44   5  ,COUNT(ydate)
07:39:44   6  ,MAX(ydate)
07:39:44   7  ,TO_CHAR(MAX(ydate),'Dy')maxday
07:39:44   8  FROM fxpst12
07:39:44   9  GROUP BY
07:39:44  10  TO_CHAR(ydate,'WW')
07:39:44  11  ORDER BY
07:39:44  12  MIN(ydate)
07:39:44  13  /
FROM fxpst12
     *
ERROR at line 8:
ORA-00942: table or view does not exist


Elapsed: 00:00:00.00
07:39:44 SQL> 
07:39:44 SQL> -- This SELECT gives me text for a-tags
07:39:44 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
07:39:44 SQL> SET TIME off TIMING off ECHO off HEADING off
<pre>
FROM fxpst12
     *
</pre>
ERROR at line 3:
<br>
ORA-00942: table or view does not exist
<br>


FROM fxpst12
     *
ERROR at line 3:
ORA-00942: table or view does not exist


Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

SQL*Plus: Release 11.2.0.1.0 Production on Mon Mar 21 22:34:38 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

22:34:38 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
22:34:38 SQL> 22:34:38 SQL> --
22:34:38 SQL> -- fx_past.sql
22:34:38 SQL> --
22:34:38 SQL> 
22:34:38 SQL> -- I use this script to join 3 types of tables:
22:34:38 SQL> -- prices,gains
22:34:38 SQL> -- gatt-scores
22:34:38 SQL> -- gattn-scores
22:34:38 SQL> 
22:34:38 SQL> -- I can pattern off this script:
22:34:38 SQL> -- /pt/s/rluck/svm62/qrs2.sql
22:34:38 SQL> 
22:34:38 SQL> DROP TABLE fxpst10;

Table dropped.

Elapsed: 00:00:00.44
22:34:39 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.38
22:34:39 SQL> CREATE TABLE fxpst10 COMPRESS AS
22:34:39   2  SELECT
22:34:39   3  pair
22:34:39   4  ,ydate
22:34:39   5  ,clse
22:34:39   6  ,prdate
22:34:39   7  ,(LEAD(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g2
22:34:39   8  ,(LEAD(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g6
22:34:39   9  FROM di5min
22:34:39  10  WHERE ydate > '2011-01-30'
22:34:39  11  AND clse > 0
22:34:39  12  ORDER BY pair,ydate
22:34:39  13  /

Table created.

Elapsed: 00:00:02.66
22:34:42 SQL> 
22:34:42 SQL> ANALYZE TABLE fxpst10 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.28
22:34:42 SQL> 
22:34:42 SQL> DROP TABLE fxpst12;

Table dropped.

Elapsed: 00:00:00.05
22:34:42 SQL> CREATE TABLE fxpst12 COMPRESS AS
22:34:42   2  SELECT
22:34:42   3  m.pair
22:34:42   4  ,m.ydate
22:34:42   5  ,m.clse
22:34:42   6  ,(l.score-s.score)	 score_diff
22:34:42   7  ,ROUND(l.score-s.score,1) rscore_diff1
22:34:42   8  ,ROUND(l.score-s.score,2) rscore_diff2
22:34:42   9  ,m.g2
22:34:42  10  ,m.g6
22:34:42  11  ,m.g6-m.g2 g4
22:34:42  12  ,CORR(l.score-s.score,g6)OVER(PARTITION BY l.pair ORDER BY l.ydate ROWS BETWEEN 12*24*1 PRECEDING AND CURRENT ROW)rnng_crr1
22:34:42  13  FROM svm62scores l,svm62scores s,fxpst10 m
22:34:42  14  WHERE l.targ='gatt'
22:34:42  15  AND   s.targ='gattn'
22:34:42  16  AND l.prdate = s.prdate
22:34:42  17  AND l.prdate = m.prdate
22:34:42  18  -- Speed things up:
22:34:42  19  AND l.ydate > '2011-01-30'
22:34:42  20  AND s.ydate > '2011-01-30'
22:34:42  21  /

Table created.

Elapsed: 00:00:01.19
22:34:43 SQL> 
22:34:43 SQL> ANALYZE TABLE fxpst12 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.10
22:34:43 SQL> 
22:34:43 SQL> -- rpt
22:34:43 SQL> -- This SELECT gives me a list of recent week-names.
22:34:43 SQL> -- I use minday, maxday to help me understand the contents of each week.
22:34:43 SQL> SELECT
22:34:43   2  TO_CHAR(ydate,'WW')
22:34:43   3  ,MIN(ydate)
22:34:43   4  ,TO_CHAR(MIN(ydate),'Dy')minday
22:34:43   5  ,COUNT(ydate)
22:34:43   6  ,MAX(ydate)
22:34:43   7  ,TO_CHAR(MAX(ydate),'Dy')maxday
22:34:43   8  FROM fxpst12
22:34:43   9  GROUP BY
22:34:43  10  TO_CHAR(ydate,'WW')
22:34:43  11  ORDER BY
22:34:43  12  MIN(ydate)
22:34:43  13  /

TO MIN(YDATE)	       MIN COUNT(YDATE) MAX(YDATE)	    MAX
-- ------------------- --- ------------ ------------------- ---
05 2011-01-30 22:15:00 Sun	   8422 2011-02-04 21:55:00 Fri
06 2011-02-06 22:15:00 Sun	   5690 2011-02-11 21:55:00 Fri
07 2011-02-13 22:15:00 Sun	   5695 2011-02-18 21:55:00 Fri
08 2011-02-20 22:15:00 Sun	   4256 2011-02-25 21:55:00 Fri
09 2011-02-27 22:15:00 Sun	   3964 2011-03-04 21:55:00 Fri
10 2011-03-06 22:15:00 Sun	   4271 2011-03-11 21:55:00 Fri
11 2011-03-13 21:15:00 Sun	  12266 2011-03-18 20:55:00 Fri
12 2011-03-20 21:15:00 Sun	   1782 2011-03-21 16:50:00 Mon

8 rows selected.

Elapsed: 00:00:00.03
22:34:43 SQL> 
22:34:43 SQL> -- This SELECT gives me text for a-tags
22:34:43 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
22:34:43 SQL> SET TIME off TIMING off ECHO off HEADING off
<p>
<table id='table_fx_past'>
<tr>
<td>
Week: 2011-01-30 Through 2011-02-04
</td>
</tr>
<tr>
<td>
Week: 2011-02-06 Through 2011-02-11
</td>
</tr>
<tr>
<td>
Week: 2011-02-13 Through 2011-02-18
</td>
</tr>
<tr>
<td>
Week: 2011-02-20 Through 2011-02-25
</td>
</tr>
<tr>
<td>
Week: 2011-02-27 Through 2011-03-04
</td>
</tr>
<tr>
<td>
Week: 2011-03-06 Through 2011-03-11
</td>
</tr>
<tr>
<td>
Week: 2011-03-13 Through 2011-03-18
</td>
</tr>
<tr>
<td>
Week: 2011-03-20 Through 2011-03-21
</td>
</tr>
</table>
<p>

8 rows selected.<br>
<br>



@fx_past_week.sql 2011-01-30
@fx_past_week.sql 2011-02-06
@fx_past_week.sql 2011-02-13
@fx_past_week.sql 2011-02-20
@fx_past_week.sql 2011-02-27
@fx_past_week.sql 2011-03-06
@fx_past_week.sql 2011-03-13
@fx_past_week.sql 2011-03-20

8 rows selected.

Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

SQL*Plus: Release 11.2.0.1.0 Production on Mon Mar 21 22:46:01 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

22:46:01 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
22:46:01 SQL> 22:46:01 SQL> --
22:46:01 SQL> -- fx_past.sql
22:46:01 SQL> --
22:46:01 SQL> 
22:46:01 SQL> -- I use this script to join 3 types of tables:
22:46:01 SQL> -- prices,gains
22:46:01 SQL> -- gatt-scores
22:46:01 SQL> -- gattn-scores
22:46:01 SQL> 
22:46:01 SQL> -- I can pattern off this script:
22:46:01 SQL> -- /pt/s/rluck/svm62/qrs2.sql
22:46:01 SQL> 
22:46:01 SQL> DROP TABLE fxpst10;

Table dropped.

Elapsed: 00:00:00.08
22:46:01 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.72
22:46:02 SQL> CREATE TABLE fxpst10 COMPRESS AS
22:46:02   2  SELECT
22:46:02   3  pair
22:46:02   4  ,ydate
22:46:02   5  ,clse
22:46:02   6  ,prdate
22:46:02   7  ,(LEAD(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g2
22:46:02   8  ,(LEAD(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g6
22:46:02   9  FROM di5min
22:46:02  10  WHERE ydate > '2011-01-30'
22:46:02  11  AND clse > 0
22:46:02  12  ORDER BY pair,ydate
22:46:02  13  /

Table created.

Elapsed: 00:00:01.27
22:46:03 SQL> 
22:46:03 SQL> ANALYZE TABLE fxpst10 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.16
22:46:03 SQL> 
22:46:03 SQL> DROP TABLE fxpst12;

Table dropped.

Elapsed: 00:00:00.05
22:46:03 SQL> CREATE TABLE fxpst12 COMPRESS AS
22:46:03   2  SELECT
22:46:03   3  m.pair
22:46:03   4  ,m.ydate
22:46:03   5  ,m.clse
22:46:03   6  ,(l.score-s.score)	 score_diff
22:46:03   7  ,ROUND(l.score-s.score,1) rscore_diff1
22:46:03   8  ,ROUND(l.score-s.score,2) rscore_diff2
22:46:03   9  ,m.g2
22:46:03  10  ,m.g6
22:46:03  11  ,m.g6-m.g2 g4
22:46:03  12  ,CORR(l.score-s.score,g6)OVER(PARTITION BY l.pair ORDER BY l.ydate ROWS BETWEEN 12*24*1 PRECEDING AND CURRENT ROW)rnng_crr1
22:46:03  13  FROM svm62scores l,svm62scores s,fxpst10 m
22:46:03  14  WHERE l.targ='gatt'
22:46:03  15  AND   s.targ='gattn'
22:46:03  16  AND l.prdate = s.prdate
22:46:03  17  AND l.prdate = m.prdate
22:46:03  18  -- Speed things up:
22:46:03  19  AND l.ydate > '2011-01-30'
22:46:03  20  AND s.ydate > '2011-01-30'
22:46:03  21  /

Table created.

Elapsed: 00:00:01.19
22:46:05 SQL> 
22:46:05 SQL> ANALYZE TABLE fxpst12 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.10
22:46:05 SQL> 
22:46:05 SQL> -- rpt
22:46:05 SQL> -- This SELECT gives me a list of recent week-names.
22:46:05 SQL> -- I use minday, maxday to help me understand the contents of each week.
22:46:05 SQL> SELECT
22:46:05   2  TO_CHAR(ydate,'WW')
22:46:05   3  ,MIN(ydate)
22:46:05   4  ,TO_CHAR(MIN(ydate),'Dy')minday
22:46:05   5  ,COUNT(ydate)
22:46:05   6  ,MAX(ydate)
22:46:05   7  ,TO_CHAR(MAX(ydate),'Dy')maxday
22:46:05   8  FROM fxpst12
22:46:05   9  GROUP BY
22:46:05  10  TO_CHAR(ydate,'WW')
22:46:05  11  ORDER BY
22:46:05  12  MIN(ydate)
22:46:05  13  /

TO MIN(YDATE)	       MIN COUNT(YDATE) MAX(YDATE)	    MAX
-- ------------------- --- ------------ ------------------- ---
05 2011-01-30 22:15:00 Sun	   8472 2011-02-04 21:55:00 Fri
06 2011-02-06 22:15:00 Sun	   5690 2011-02-11 21:55:00 Fri
07 2011-02-13 22:15:00 Sun	   5695 2011-02-18 21:55:00 Fri
08 2011-02-20 22:15:00 Sun	   4256 2011-02-25 21:55:00 Fri
09 2011-02-27 22:15:00 Sun	   3964 2011-03-04 21:55:00 Fri
10 2011-03-06 22:15:00 Sun	   4271 2011-03-11 21:55:00 Fri
11 2011-03-13 21:15:00 Sun	  12266 2011-03-18 20:55:00 Fri
12 2011-03-20 21:15:00 Sun	   1782 2011-03-21 16:50:00 Mon

8 rows selected.

Elapsed: 00:00:00.04
22:46:05 SQL> 
22:46:05 SQL> -- This SELECT gives me text for a-tags
22:46:05 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
22:46:05 SQL> SET TIME off TIMING off ECHO off HEADING off
<p>
<table id='table_fx_past'>
<tr>
<td>
Week: 2011-01-30 Through 2011-02-04
</td>
</tr>
<tr>
<td>
Week: 2011-02-06 Through 2011-02-11
</td>
</tr>
<tr>
<td>
Week: 2011-02-13 Through 2011-02-18
</td>
</tr>
<tr>
<td>
Week: 2011-02-20 Through 2011-02-25
</td>
</tr>
<tr>
<td>
Week: 2011-02-27 Through 2011-03-04
</td>
</tr>
<tr>
<td>
Week: 2011-03-06 Through 2011-03-11
</td>
</tr>
<tr>
<td>
Week: 2011-03-13 Through 2011-03-18
</td>
</tr>
<tr>
<td>
Week: 2011-03-20 Through 2011-03-21
</td>
</tr>
</table>
<p>

8 rows selected.<br>
<br>



@fx_past_week.sql 2011-01-30
@fx_past_week.sql 2011-02-06
@fx_past_week.sql 2011-02-13
@fx_past_week.sql 2011-02-20
@fx_past_week.sql 2011-02-27
@fx_past_week.sql 2011-03-06
@fx_past_week.sql 2011-03-13
@fx_past_week.sql 2011-03-20

8 rows selected.

Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
