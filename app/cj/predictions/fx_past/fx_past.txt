
SQL*Plus: Release 11.2.0.1.0 Production on Sun Mar 20 22:53:36 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

22:53:37 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
22:53:37 SQL> 22:53:37 SQL> --
22:53:37 SQL> -- fx_past.sql
22:53:37 SQL> --
22:53:37 SQL> 
22:53:37 SQL> -- I use this script to join 3 types of tables:
22:53:37 SQL> -- prices,gains
22:53:37 SQL> -- gatt-scores
22:53:37 SQL> -- gattn-scores
22:53:37 SQL> 
22:53:37 SQL> -- I can pattern off this script:
22:53:37 SQL> -- /pt/s/rluck/svm62/qrs2.sql
22:53:37 SQL> 
22:53:37 SQL> DROP TABLE fxpst10;

Table dropped.

Elapsed: 00:00:00.17
22:53:37 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.52
22:53:37 SQL> CREATE TABLE fxpst10 COMPRESS AS
22:53:37   2  SELECT
22:53:37   3  pair
22:53:37   4  ,ydate
22:53:37   5  ,clse
22:53:37   6  ,prdate
22:53:37   7  ,(LEAD(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g2
22:53:37   8  ,(LEAD(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g6
22:53:37   9  FROM di5min
22:53:37  10  WHERE ydate > sysdate - (7 * 7)
22:53:37  11  AND clse > 0
22:53:37  12  ORDER BY pair,ydate
22:53:37  13  /

Table created.

Elapsed: 00:00:01.22
22:53:38 SQL> 
22:53:38 SQL> ANALYZE TABLE fxpst10 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.19
22:53:39 SQL> 
22:53:39 SQL> DROP TABLE fxpst12;

Table dropped.

Elapsed: 00:00:00.16
22:53:39 SQL> CREATE TABLE fxpst12 COMPRESS AS
22:53:39   2  SELECT
22:53:39   3  m.pair
22:53:39   4  ,m.ydate
22:53:39   5  ,m.clse
22:53:39   6  ,ROUND(l.score-s.score,1) rscore_diff1
22:53:39   7  ,ROUND(l.score-s.score,2) rscore_diff2
22:53:39   8  ,m.g2
22:53:39   9  ,m.g6
22:53:39  10  ,m.g6-m.g2 g4
22:53:39  11  ,CORR(l.score-s.score,g6)OVER(PARTITION BY l.pair ORDER BY l.ydate ROWS BETWEEN 12*24*1 PRECEDING AND CURRENT ROW)rnng_crr1
22:53:39  12  FROM svm62scores l,svm62scores s,fxpst10 m
22:53:39  13  WHERE l.targ='gatt'
22:53:39  14  AND   s.targ='gattn'
22:53:39  15  AND l.prdate = s.prdate
22:53:39  16  AND l.prdate = m.prdate
22:53:39  17  -- Speed things up:
22:53:39  18  AND l.ydate > sysdate - (7 * 7)
22:53:39  19  AND s.ydate > sysdate - (7 * 7)
22:53:39  20  /

Table created.

Elapsed: 00:00:01.01
22:53:40 SQL> 
22:53:40 SQL> ANALYZE TABLE fxpst12 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.15
22:53:40 SQL> 
22:53:40 SQL> -- rpt
22:53:40 SQL> -- This SELECT gives me a list of recent week-names.
22:53:40 SQL> -- I use minday, maxday to help me understand the contents of each week.
22:53:40 SQL> SELECT
22:53:40   2  TO_CHAR(ydate,'WW')
22:53:40   3  ,MIN(ydate)
22:53:40   4  ,TO_CHAR(MIN(ydate),'Dy')minday
22:53:40   5  ,COUNT(ydate)
22:53:40   6  ,MAX(ydate)
22:53:40   7  ,TO_CHAR(MAX(ydate),'Dy')maxday
22:53:40   8  FROM fxpst12
22:53:40   9  GROUP BY
22:53:40  10  TO_CHAR(ydate,'WW')
22:53:40  11  ORDER BY
22:53:40  12  MIN(ydate)
22:53:40  13  /

TO MIN(YDATE)	       MIN COUNT(YDATE) MAX(YDATE)	    MAX
-- ------------------- --- ------------ ------------------- ---
05 2011-01-30 22:55:00 Sun	   7758 2011-02-04 21:55:00 Fri
06 2011-02-06 22:15:00 Sun	   5304 2011-02-11 21:55:00 Fri
07 2011-02-13 22:15:00 Sun	   4271 2011-02-18 21:55:00 Fri
08 2011-02-20 22:15:00 Sun	   2991 2011-02-25 21:55:00 Fri
09 2011-02-27 22:15:00 Sun	   1838 2011-03-04 21:55:00 Fri
10 2011-03-06 22:15:00 Sun	   1424 2011-03-11 21:55:00 Fri
11 2011-03-13 21:15:00 Sun	   7628 2011-03-18 20:45:00 Fri

7 rows selected.

Elapsed: 00:00:00.03
22:53:40 SQL> 
22:53:40 SQL> -- This SELECT gives me text for a-tags
22:53:40 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
22:53:40 SQL> SET TIME off TIMING off ECHO off PAGESIZE 123 LINESIZE 77 TRIMSPOOL ON

WWEEK
-----------------------------
2011-01-30 Through 2011-02-04
2011-02-06 Through 2011-02-11
2011-02-13 Through 2011-02-18
2011-02-20 Through 2011-02-25
2011-02-27 Through 2011-03-04
2011-03-06 Through 2011-03-11
2011-03-13 Through 2011-03-18

7 rows selected.

Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

SQL*Plus: Release 11.2.0.1.0 Production on Mon Mar 21 02:00:40 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

02:00:40 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.01
02:00:40 SQL> 02:00:40 SQL> --
02:00:40 SQL> -- fx_past.sql
02:00:40 SQL> --
02:00:40 SQL> 
02:00:40 SQL> -- I use this script to join 3 types of tables:
02:00:40 SQL> -- prices,gains
02:00:40 SQL> -- gatt-scores
02:00:40 SQL> -- gattn-scores
02:00:40 SQL> 
02:00:40 SQL> -- I can pattern off this script:
02:00:40 SQL> -- /pt/s/rluck/svm62/qrs2.sql
02:00:40 SQL> 
02:00:40 SQL> DROP TABLE fxpst10;

Table dropped.

Elapsed: 00:00:00.89
02:00:41 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.36
02:00:41 SQL> CREATE TABLE fxpst10 COMPRESS AS
02:00:41   2  SELECT
02:00:41   3  pair
02:00:41   4  ,ydate
02:00:41   5  ,clse
02:00:41   6  ,prdate
02:00:41   7  ,(LEAD(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g2
02:00:41   8  ,(LEAD(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g6
02:00:41   9  FROM di5min
02:00:41  10  WHERE ydate > sysdate - (7 * 7)
02:00:41  11  AND clse > 0
02:00:41  12  ORDER BY pair,ydate
02:00:41  13  /

Table created.

Elapsed: 00:00:02.82
02:00:44 SQL> 
02:00:44 SQL> ANALYZE TABLE fxpst10 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.69
02:00:45 SQL> 
02:00:45 SQL> DROP TABLE fxpst12;

Table dropped.

Elapsed: 00:00:00.22
02:00:45 SQL> CREATE TABLE fxpst12 COMPRESS AS
02:00:45   2  SELECT
02:00:45   3  m.pair
02:00:45   4  ,m.ydate
02:00:45   5  ,m.clse
02:00:45   6  ,ROUND(l.score-s.score,1) rscore_diff1
02:00:45   7  ,ROUND(l.score-s.score,2) rscore_diff2
02:00:45   8  ,m.g2
02:00:45   9  ,m.g6
02:00:45  10  ,m.g6-m.g2 g4
02:00:45  11  ,CORR(l.score-s.score,g6)OVER(PARTITION BY l.pair ORDER BY l.ydate ROWS BETWEEN 12*24*1 PRECEDING AND CURRENT ROW)rnng_crr1
02:00:45  12  FROM svm62scores l,svm62scores s,fxpst10 m
02:00:45  13  WHERE l.targ='gatt'
02:00:45  14  AND   s.targ='gattn'
02:00:45  15  AND l.prdate = s.prdate
02:00:45  16  AND l.prdate = m.prdate
02:00:45  17  -- Speed things up:
02:00:45  18  AND l.ydate > sysdate - (7 * 7)
02:00:45  19  AND s.ydate > sysdate - (7 * 7)
02:00:45  20  /

Table created.

Elapsed: 00:00:00.99
02:00:46 SQL> 
02:00:46 SQL> ANALYZE TABLE fxpst12 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.07
02:00:46 SQL> 
02:00:46 SQL> -- rpt
02:00:46 SQL> -- This SELECT gives me a list of recent week-names.
02:00:46 SQL> -- I use minday, maxday to help me understand the contents of each week.
02:00:46 SQL> SELECT
02:00:46   2  TO_CHAR(ydate,'WW')
02:00:46   3  ,MIN(ydate)
02:00:46   4  ,TO_CHAR(MIN(ydate),'Dy')minday
02:00:46   5  ,COUNT(ydate)
02:00:46   6  ,MAX(ydate)
02:00:46   7  ,TO_CHAR(MAX(ydate),'Dy')maxday
02:00:46   8  FROM fxpst12
02:00:46   9  GROUP BY
02:00:46  10  TO_CHAR(ydate,'WW')
02:00:46  11  ORDER BY
02:00:46  12  MIN(ydate)
02:00:46  13  /

TO MIN(YDATE)	       MIN COUNT(YDATE) MAX(YDATE)	    MAX
-- ------------------- --- ------------ ------------------- ---
05 2011-01-31 02:05:00 Mon	   7340 2011-02-04 21:55:00 Fri
06 2011-02-06 22:15:00 Sun	   5644 2011-02-11 21:55:00 Fri
07 2011-02-13 22:15:00 Sun	   4271 2011-02-18 21:55:00 Fri
08 2011-02-20 22:15:00 Sun	   3230 2011-02-25 21:55:00 Fri
09 2011-02-27 22:15:00 Sun	   3885 2011-03-04 21:55:00 Fri
10 2011-03-06 22:15:00 Sun	   1594 2011-03-11 21:55:00 Fri
11 2011-03-13 21:15:00 Sun	   8375 2011-03-18 20:45:00 Fri

7 rows selected.

Elapsed: 00:00:00.04
02:00:46 SQL> 
02:00:46 SQL> -- This SELECT gives me text for a-tags
02:00:46 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
02:00:46 SQL> SET TIME off TIMING off ECHO off
<p>
<table id='table_fx_past'>
<tr>
<th scope="col">
WWEEK
</th>
</tr>
<tr>
<td>
2011-01-31 Through 2011-02-04
</td>
</tr>
<tr>
<td>
2011-02-06 Through 2011-02-11
</td>
</tr>
<tr>
<td>
2011-02-13 Through 2011-02-18
</td>
</tr>
<tr>
<td>
2011-02-20 Through 2011-02-25
</td>
</tr>
<tr>
<td>
2011-02-27 Through 2011-03-04
</td>
</tr>
<tr>
<td>
2011-03-06 Through 2011-03-11
</td>
</tr>
<tr>
<td>
2011-03-13 Through 2011-03-18
</td>
</tr>
</table>
<p>

7 rows selected.<br>
<br>


Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

SQL*Plus: Release 11.2.0.1.0 Production on Mon Mar 21 03:05:50 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

03:05:50 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
03:05:50 SQL> 03:05:50 SQL> --
03:05:50 SQL> -- fx_past.sql
03:05:50 SQL> --
03:05:50 SQL> 
03:05:50 SQL> -- I use this script to join 3 types of tables:
03:05:50 SQL> -- prices,gains
03:05:50 SQL> -- gatt-scores
03:05:50 SQL> -- gattn-scores
03:05:50 SQL> 
03:05:50 SQL> -- I can pattern off this script:
03:05:50 SQL> -- /pt/s/rluck/svm62/qrs2.sql
03:05:50 SQL> 
03:05:50 SQL> DROP TABLE fxpst10;

Table dropped.

Elapsed: 00:00:00.63
03:05:51 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.38
03:05:51 SQL> CREATE TABLE fxpst10 COMPRESS AS
03:05:51   2  SELECT
03:05:51   3  pair
03:05:51   4  ,ydate
03:05:51   5  ,clse
03:05:51   6  ,prdate
03:05:51   7  ,(LEAD(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g2
03:05:51   8  ,(LEAD(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g6
03:05:51   9  FROM di5min
03:05:51  10  WHERE ydate > sysdate - (7 * 7)
03:05:51  11  AND clse > 0
03:05:51  12  ORDER BY pair,ydate
03:05:51  13  /

Table created.

Elapsed: 00:00:02.57
03:05:54 SQL> 
03:05:54 SQL> ANALYZE TABLE fxpst10 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.28
03:05:54 SQL> 
03:05:54 SQL> DROP TABLE fxpst12;

Table dropped.

Elapsed: 00:00:00.11
03:05:54 SQL> CREATE TABLE fxpst12 COMPRESS AS
03:05:54   2  SELECT
03:05:54   3  m.pair
03:05:54   4  ,m.ydate
03:05:54   5  ,m.clse
03:05:54   6  ,ROUND(l.score-s.score,1) rscore_diff1
03:05:54   7  ,ROUND(l.score-s.score,2) rscore_diff2
03:05:54   8  ,m.g2
03:05:54   9  ,m.g6
03:05:54  10  ,m.g6-m.g2 g4
03:05:54  11  ,CORR(l.score-s.score,g6)OVER(PARTITION BY l.pair ORDER BY l.ydate ROWS BETWEEN 12*24*1 PRECEDING AND CURRENT ROW)rnng_crr1
03:05:54  12  FROM svm62scores l,svm62scores s,fxpst10 m
03:05:54  13  WHERE l.targ='gatt'
03:05:54  14  AND   s.targ='gattn'
03:05:54  15  AND l.prdate = s.prdate
03:05:54  16  AND l.prdate = m.prdate
03:05:54  17  -- Speed things up:
03:05:54  18  AND l.ydate > sysdate - (7 * 7)
03:05:54  19  AND s.ydate > sysdate - (7 * 7)
03:05:54  20  /

Table created.

Elapsed: 00:00:01.14
03:05:55 SQL> 
03:05:55 SQL> ANALYZE TABLE fxpst12 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.15
03:05:55 SQL> 
03:05:55 SQL> -- rpt
03:05:55 SQL> -- This SELECT gives me a list of recent week-names.
03:05:55 SQL> -- I use minday, maxday to help me understand the contents of each week.
03:05:55 SQL> SELECT
03:05:55   2  TO_CHAR(ydate,'WW')
03:05:55   3  ,MIN(ydate)
03:05:55   4  ,TO_CHAR(MIN(ydate),'Dy')minday
03:05:55   5  ,COUNT(ydate)
03:05:55   6  ,MAX(ydate)
03:05:55   7  ,TO_CHAR(MAX(ydate),'Dy')maxday
03:05:55   8  FROM fxpst12
03:05:55   9  GROUP BY
03:05:55  10  TO_CHAR(ydate,'WW')
03:05:55  11  ORDER BY
03:05:55  12  MIN(ydate)
03:05:55  13  /

TO MIN(YDATE)	       MIN COUNT(YDATE) MAX(YDATE)	    MAX
-- ------------------- --- ------------ ------------------- ---
05 2011-01-31 03:10:00 Mon	   7197 2011-02-04 21:55:00 Fri
06 2011-02-06 22:15:00 Sun	   5644 2011-02-11 21:55:00 Fri
07 2011-02-13 22:15:00 Sun	   4271 2011-02-18 21:55:00 Fri
08 2011-02-20 22:15:00 Sun	   3230 2011-02-25 21:55:00 Fri
09 2011-02-27 22:15:00 Sun	   3885 2011-03-04 21:55:00 Fri
10 2011-03-06 22:15:00 Sun	   1594 2011-03-11 21:55:00 Fri
11 2011-03-13 21:15:00 Sun	   8635 2011-03-18 20:45:00 Fri

7 rows selected.

Elapsed: 00:00:00.03
03:05:55 SQL> 
03:05:55 SQL> -- This SELECT gives me text for a-tags
03:05:55 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
03:05:55 SQL> SET TIME off TIMING off ECHO off
<p>
<table id='table_fx_past'>
<tr>
<th scope="col">
WWEEK
</th>
</tr>
<tr>
<td>
2011-01-31 Through 2011-02-04
</td>
</tr>
<tr>
<td>
2011-02-06 Through 2011-02-11
</td>
</tr>
<tr>
<td>
2011-02-13 Through 2011-02-18
</td>
</tr>
<tr>
<td>
2011-02-20 Through 2011-02-25
</td>
</tr>
<tr>
<td>
2011-02-27 Through 2011-03-04
</td>
</tr>
<tr>
<td>
2011-03-06 Through 2011-03-11
</td>
</tr>
<tr>
<td>
2011-03-13 Through 2011-03-18
</td>
</tr>
</table>
<p>

7 rows selected.<br>
<br>


Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

SQL*Plus: Release 11.2.0.1.0 Production on Mon Mar 21 03:12:14 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

03:12:14 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
03:12:14 SQL> 03:12:14 SQL> --
03:12:14 SQL> -- fx_past.sql
03:12:14 SQL> --
03:12:14 SQL> 
03:12:14 SQL> -- I use this script to join 3 types of tables:
03:12:14 SQL> -- prices,gains
03:12:14 SQL> -- gatt-scores
03:12:14 SQL> -- gattn-scores
03:12:14 SQL> 
03:12:14 SQL> -- I can pattern off this script:
03:12:14 SQL> -- /pt/s/rluck/svm62/qrs2.sql
03:12:14 SQL> 
03:12:14 SQL> DROP TABLE fxpst10;

Table dropped.

Elapsed: 00:00:00.07
03:12:14 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.11
03:12:14 SQL> CREATE TABLE fxpst10 COMPRESS AS
03:12:14   2  SELECT
03:12:14   3  pair
03:12:14   4  ,ydate
03:12:14   5  ,clse
03:12:14   6  ,prdate
03:12:14   7  ,(LEAD(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g2
03:12:14   8  ,(LEAD(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g6
03:12:14   9  FROM di5min
03:12:14  10  WHERE ydate > sysdate - (7 * 7)
03:12:14  11  AND clse > 0
03:12:14  12  ORDER BY pair,ydate
03:12:14  13  /

Table created.

Elapsed: 00:00:01.22
03:12:15 SQL> 
03:12:15 SQL> ANALYZE TABLE fxpst10 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.19
03:12:15 SQL> 
03:12:15 SQL> DROP TABLE fxpst12;

Table dropped.

Elapsed: 00:00:00.08
03:12:16 SQL> CREATE TABLE fxpst12 COMPRESS AS
03:12:16   2  SELECT
03:12:16   3  m.pair
03:12:16   4  ,m.ydate
03:12:16   5  ,m.clse
03:12:16   6  ,ROUND(l.score-s.score,1) rscore_diff1
03:12:16   7  ,ROUND(l.score-s.score,2) rscore_diff2
03:12:16   8  ,m.g2
03:12:16   9  ,m.g6
03:12:16  10  ,m.g6-m.g2 g4
03:12:16  11  ,CORR(l.score-s.score,g6)OVER(PARTITION BY l.pair ORDER BY l.ydate ROWS BETWEEN 12*24*1 PRECEDING AND CURRENT ROW)rnng_crr1
03:12:16  12  FROM svm62scores l,svm62scores s,fxpst10 m
03:12:16  13  WHERE l.targ='gatt'
03:12:16  14  AND   s.targ='gattn'
03:12:16  15  AND l.prdate = s.prdate
03:12:16  16  AND l.prdate = m.prdate
03:12:16  17  -- Speed things up:
03:12:16  18  AND l.ydate > sysdate - (7 * 7)
03:12:16  19  AND s.ydate > sysdate - (7 * 7)
03:12:16  20  /

Table created.

Elapsed: 00:00:00.95
03:12:17 SQL> 
03:12:17 SQL> ANALYZE TABLE fxpst12 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.10
03:12:17 SQL> 
03:12:17 SQL> -- rpt
03:12:17 SQL> -- This SELECT gives me a list of recent week-names.
03:12:17 SQL> -- I use minday, maxday to help me understand the contents of each week.
03:12:17 SQL> SELECT
03:12:17   2  TO_CHAR(ydate,'WW')
03:12:17   3  ,MIN(ydate)
03:12:17   4  ,TO_CHAR(MIN(ydate),'Dy')minday
03:12:17   5  ,COUNT(ydate)
03:12:17   6  ,MAX(ydate)
03:12:17   7  ,TO_CHAR(MAX(ydate),'Dy')maxday
03:12:17   8  FROM fxpst12
03:12:17   9  GROUP BY
03:12:17  10  TO_CHAR(ydate,'WW')
03:12:17  11  ORDER BY
03:12:17  12  MIN(ydate)
03:12:17  13  /

TO MIN(YDATE)	       MIN COUNT(YDATE) MAX(YDATE)	    MAX
-- ------------------- --- ------------ ------------------- ---
05 2011-01-31 03:15:00 Mon	   7186 2011-02-04 21:55:00 Fri
06 2011-02-06 22:15:00 Sun	   5644 2011-02-11 21:55:00 Fri
07 2011-02-13 22:15:00 Sun	   4271 2011-02-18 21:55:00 Fri
08 2011-02-20 22:15:00 Sun	   3230 2011-02-25 21:55:00 Fri
09 2011-02-27 22:15:00 Sun	   3885 2011-03-04 21:55:00 Fri
10 2011-03-06 22:15:00 Sun	   1594 2011-03-11 21:55:00 Fri
11 2011-03-13 21:15:00 Sun	   8657 2011-03-18 20:45:00 Fri

7 rows selected.

Elapsed: 00:00:00.03
03:12:17 SQL> 
03:12:17 SQL> -- This SELECT gives me text for a-tags
03:12:17 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
03:12:17 SQL> SET TIME off TIMING off ECHO off
<p>
<table id='table_fx_past'>
<tr>
<th scope="col">
WWEEK
</th>
</tr>
<tr>
<td>
2011-01-31 Through 2011-02-04
</td>
</tr>
<tr>
<td>
2011-02-06 Through 2011-02-11
</td>
</tr>
<tr>
<td>
2011-02-13 Through 2011-02-18
</td>
</tr>
<tr>
<td>
2011-02-20 Through 2011-02-25
</td>
</tr>
<tr>
<td>
2011-02-27 Through 2011-03-04
</td>
</tr>
<tr>
<td>
2011-03-06 Through 2011-03-11
</td>
</tr>
<tr>
<td>
2011-03-13 Through 2011-03-18
</td>
</tr>
</table>
<p>

7 rows selected.<br>
<br>


Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

SQL*Plus: Release 11.2.0.1.0 Production on Mon Mar 21 03:20:13 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

03:20:13 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
03:20:13 SQL> 03:20:13 SQL> --
03:20:13 SQL> -- fx_past.sql
03:20:13 SQL> --
03:20:13 SQL> 
03:20:13 SQL> -- I use this script to join 3 types of tables:
03:20:13 SQL> -- prices,gains
03:20:13 SQL> -- gatt-scores
03:20:13 SQL> -- gattn-scores
03:20:13 SQL> 
03:20:13 SQL> -- I can pattern off this script:
03:20:13 SQL> -- /pt/s/rluck/svm62/qrs2.sql
03:20:13 SQL> 
03:20:13 SQL> DROP TABLE fxpst10;

Table dropped.

Elapsed: 00:00:00.23
03:20:13 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.18
03:20:13 SQL> CREATE TABLE fxpst10 COMPRESS AS
03:20:13   2  SELECT
03:20:13   3  pair
03:20:13   4  ,ydate
03:20:13   5  ,clse
03:20:13   6  ,prdate
03:20:13   7  ,(LEAD(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g2
03:20:13   8  ,(LEAD(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate)-clse)/clse g6
03:20:13   9  FROM di5min
03:20:13  10  WHERE ydate > sysdate - (7 * 7)
03:20:13  11  AND clse > 0
03:20:13  12  ORDER BY pair,ydate
03:20:13  13  /

Table created.

Elapsed: 00:00:01.51
03:20:15 SQL> 
03:20:15 SQL> ANALYZE TABLE fxpst10 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.19
03:20:15 SQL> 
03:20:15 SQL> DROP TABLE fxpst12;

Table dropped.

Elapsed: 00:00:00.11
03:20:15 SQL> CREATE TABLE fxpst12 COMPRESS AS
03:20:15   2  SELECT
03:20:15   3  m.pair
03:20:15   4  ,m.ydate
03:20:15   5  ,m.clse
03:20:15   6  ,ROUND(l.score-s.score,1) rscore_diff1
03:20:15   7  ,ROUND(l.score-s.score,2) rscore_diff2
03:20:15   8  ,m.g2
03:20:15   9  ,m.g6
03:20:15  10  ,m.g6-m.g2 g4
03:20:15  11  ,CORR(l.score-s.score,g6)OVER(PARTITION BY l.pair ORDER BY l.ydate ROWS BETWEEN 12*24*1 PRECEDING AND CURRENT ROW)rnng_crr1
03:20:15  12  FROM svm62scores l,svm62scores s,fxpst10 m
03:20:15  13  WHERE l.targ='gatt'
03:20:15  14  AND   s.targ='gattn'
03:20:15  15  AND l.prdate = s.prdate
03:20:15  16  AND l.prdate = m.prdate
03:20:15  17  -- Speed things up:
03:20:15  18  AND l.ydate > sysdate - (7 * 7)
03:20:15  19  AND s.ydate > sysdate - (7 * 7)
03:20:15  20  /

Table created.

Elapsed: 00:00:01.02
03:20:16 SQL> 
03:20:16 SQL> ANALYZE TABLE fxpst12 ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:00.07
03:20:16 SQL> 
03:20:16 SQL> -- rpt
03:20:16 SQL> -- This SELECT gives me a list of recent week-names.
03:20:16 SQL> -- I use minday, maxday to help me understand the contents of each week.
03:20:16 SQL> SELECT
03:20:16   2  TO_CHAR(ydate,'WW')
03:20:16   3  ,MIN(ydate)
03:20:16   4  ,TO_CHAR(MIN(ydate),'Dy')minday
03:20:16   5  ,COUNT(ydate)
03:20:16   6  ,MAX(ydate)
03:20:16   7  ,TO_CHAR(MAX(ydate),'Dy')maxday
03:20:16   8  FROM fxpst12
03:20:16   9  GROUP BY
03:20:16  10  TO_CHAR(ydate,'WW')
03:20:16  11  ORDER BY
03:20:16  12  MIN(ydate)
03:20:16  13  /

TO MIN(YDATE)	       MIN COUNT(YDATE) MAX(YDATE)	    MAX
-- ------------------- --- ------------ ------------------- ---
05 2011-01-31 03:25:00 Mon	   7164 2011-02-04 21:55:00 Fri
06 2011-02-06 22:15:00 Sun	   5644 2011-02-11 21:55:00 Fri
07 2011-02-13 22:15:00 Sun	   4271 2011-02-18 21:55:00 Fri
08 2011-02-20 22:15:00 Sun	   3230 2011-02-25 21:55:00 Fri
09 2011-02-27 22:15:00 Sun	   3885 2011-03-04 21:55:00 Fri
10 2011-03-06 22:15:00 Sun	   1594 2011-03-11 21:55:00 Fri
11 2011-03-13 21:15:00 Sun	   8688 2011-03-18 20:45:00 Fri

7 rows selected.

Elapsed: 00:00:00.03
03:20:16 SQL> 
03:20:16 SQL> -- This SELECT gives me text for a-tags
03:20:16 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
03:20:16 SQL> SET TIME off TIMING off ECHO off
<p>
<table id='table_fx_past'>
<tr>
<th scope="col">
WWEEK
</th>
</tr>
<tr>
<td>
Week: 2011-01-31 Through 2011-02-04
</td>
</tr>
<tr>
<td>
Week: 2011-02-06 Through 2011-02-11
</td>
</tr>
<tr>
<td>
Week: 2011-02-13 Through 2011-02-18
</td>
</tr>
<tr>
<td>
Week: 2011-02-20 Through 2011-02-25
</td>
</tr>
<tr>
<td>
Week: 2011-02-27 Through 2011-03-04
</td>
</tr>
<tr>
<td>
Week: 2011-03-06 Through 2011-03-11
</td>
</tr>
<tr>
<td>
Week: 2011-03-13 Through 2011-03-18
</td>
</tr>
</table>
<p>

7 rows selected.<br>
<br>


Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
